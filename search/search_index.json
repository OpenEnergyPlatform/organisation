{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Open Energy Compendium","text":"<p>The purpose of the Open Energy Family compendium is to provide an overall view of the framework. The aim is to present content in a short and easy-to-understand form to simplify the introduction to the extensive architecture of the Open Energy Family. The content then links to the technical repositories or the tools that can be used.  In this way, the compendium also serves as a concrete guide through the framework and helps to better understand the relationships between the individual components.</p>"},{"location":"#about-the-open-energy-family","title":"About the Open Energy Family","text":"<p>The Open Energy Family is a comprehensive open science framework that aims to facilitate the transition to a more sustainable and renewable energy system. The project is focused on creating and promoting open-source technologies, publicly accessible data, and transparent methods for energy system modeling. Its ultimate goal is to support collaborative research on solutions for research data management and modeling in the field of energy systems.</p> <p>Thanks to its commitment to openness, transparency, and accessibility, the Open Energy Family has already achieved considerable success in the research field. It is continuously being developed through state-funded research projects to improve its capabilities and effectiveness.</p> <p>The framework's emphasis on collaboration and community-driven innovation makes it an essential tool for researchers, scientists, and policymakers working towards a more sustainable energy future. By providing a platform for sharing ideas, data, and methods, the Open Energy Family aims to accelerate progress towards a more sustainable and equitable energy system.</p>"},{"location":"#about-nfdi4energy","title":"About NFDI4Energy:","text":"<p>NFDI4Energy, started in 2023, aims to improve research data management in energy research and promote open science practices among researchers.</p> <p>The consortium is developing five key services to address research data management in energy research and promote open science.</p> <p>To accomplish their objectives, NFDI4Energy collaborates with and contributes to the Open Energy Family. In the coming years, they plan to enhance the Open Energy Family by adding new features and capabilities. This site will be constantly updated with new features.</p> <p>Most recent information about NFDI4Energy can be found on their homepage: NFDI4Energy Homepage</p> <p>Recent publications from NFDI4Energy can be found here:Recent Publications on Zenodo</p>"},{"location":"family_community/","title":"The Open Energy Family Community","text":"<p>The Open Energy Family is developed by researchers from  various institutions in different research projects.  This open development approach ensures that the framework continues  to evolve beyond the duration of individual projects.  As a result, the Open Energy Family has fostered a vibrant community of  researchers and users, including interested individuals and employees from companies.</p> <p>While there is often significant overlap between the groups of researchers  and users, it is still relevant to distinguish between those who develop the  framework and those who use it.  This is especially true when it comes to understanding how users collaborate  in the development process. To facilitate this, the community is subdivided  based on their roles and responsibilities, allowing for greater clarity and  coordination.</p> <p>Overall, this collaborative approach to development and community-building has  been a critical factor in the success of the Open Energy Family. By encouraging  participation from a diverse range of stakeholders, the framework has been able  to evolve and adapt to the changing needs of the energy research community.</p>"},{"location":"family_community/collaborative_development/","title":"Collaborative Development","text":"<p>Our concept of collaborative development</p> <p>Researchers who participate in the development of the Open Energy Family are known as \"core developers\". Their work involves capturing scientific processes that can be implemented in software, gathering requirements, and developing processes or artifacts such as software code and test results. Additionally, they contribute to the development of specific Family Members, like the ontology, drawing on their expertise in fields such as energy systems. Core developers collaborate with the open community to improve and maintain the software and troubleshoot any issues that arise.</p> <p>To ensure the transparency and accessibility of the development process, all developments are publicly planned, executed, and documented on GitHub and in development meetings. Core developers also have direct or indirect access to internal systems such as servers that cannot be publicly accessible for security reasons.</p> <p>While the core developers are responsible for the bulk of the development work, the Open Energy Family is open to participation from anyone interested in contributing. This includes stakeholders such as other researchers in the energy system domain who may not be directly involved in the research projects but have an interest in the tools and services offered by the framework.</p> <p>As the work of core developers requires significant effort, funding is crucial to ensure their continued participation. It is therefore essential that individuals are deployed as part of a research project that provides adequate funding for their work. By embracing the collaborative spirit of Open Science, the Open Energy Family is able to leverage the expertise and contributions of a diverse range of stakeholders to create a more sustainable and equitable energy system.</p> <p> </p>      The figure shows the structure of the community (purely in regard to development): The total community is divided into two groups, which were defined in detail as personas. As shown, both groups can participate in development, but the core developers take on a special responsibility here and usually work with the support of funded research projects."},{"location":"family_community/collaborative_development/#collaborative-software-development-process","title":"Collaborative software development process","text":"<p>The following outlines how software development is implemented collaboratively in an open-source and research environment. The previously described concept of collaborative development sets the framework for software development here.</p> <p>The essential components through which software development is carried out include a tailored iterative development process aligned with our requirements and a role concept. These components will be described in detail, but it should be noted that additional practices must be employed to implement development in practice. An example is development using Git and GitHub. For collaboration, we have created detailed guidelines for naming Git branches and templates for issue creation, which are linked to the appropriate locations.</p>"},{"location":"family_community/collaborative_development/#develope-iterative-incrementally","title":"Develope Iterative &amp; Incrementally","text":"<p>We adhere to the common iterative model for software development and the software lifecycle. In the Open Energy Family, we primarily focus on continuous development of our software, which is developed and further improved in various research projects. For this reason, we view development as a process that must enable organic growth. At the same time, we recognize the need to handle various types of requirements, including fixed and long-term requirements from research projects, as well as flexible and short-term requirements arising either from users or the identification of new requirements during development. Such an approach is described in the literature as a Hybrid Development Model, as we do not exclusively follow an agile approach and do not strictly adhere to the Waterfall model in project implementation.</p> <p>Our iterative process is presented here as an overview and spans the various phases of the software lifecycle. The result is an increment that is to be understood as a specific version of the software. An increment can be released and serves as the starting point for the subsequent iteration. It is important to highlight the integrated documentation and testing steps. By incorporating these tasks as integral parts of development, we ensure complete documentation, goal-oriented development through acceptance testing, and the functionality of the software at all times.</p> <p> </p>     Overview of an iteration of the collaborative software development process of the OpenEnergyFamily. The circle shows the software life cycle, which has been adapted to the specific requirements. The yellow boxes give an impression of the process used for each phase. A summary of the process is then shown next to it.    <p>Over time, the increments are further developed, and an optimal solution is approached. The advantage lies in the fact that each increment is immediately available to all users as a release. This allows for feedback to be incorporated into each subsequent iteration, particularly to ensure user-friendliness.</p> <p> </p>      Ongoing development is carried out through several iterations with the aim of regularly publishing a new software version. This ensures that the development status and the publicly available software version are not too far apart.    <p>Going through the phases and the associated effort beyond writing code and releasing software has various advantages. In the short term, it ensures that work is done properly and in line with the agreed-upon requirements for craftsmanship and product. In the long term, it aims to keep the software continuously maintainable and enable further development and reusability. For research, this is a particular focus that contributes to sharing software as research results in a traceable manner and finding synergies.</p> <p>Below we show all phases in detail. The detailed information is relevant to facilitate teamwork. The goal is to enable a transparent and predictable way of working. Even if the work is not done directly in a team, it is still important to follow the steps to document development decisions in a traceable manner. Working with GitHub as a development platform should be kept in mind. Many additional pieces of information can be documented there, and communication with others is greatly simplified. Communication in development teams and even at a higher level within the entire community or with individuals involved in development should ideally always be up to date. This way, the overall structure of the software architecture should always be known.</p>"},{"location":"family_community/collaborative_development/#development-phases","title":"Development phases","text":"<p>In a nutshell, the collaborative software development process defines the approach from the vague idea through getting involved &amp; start planning, testing &amp; implementation to release and finally installation and operation. The aspect of collaborative cooperation is particularly emphasized here, as our software products are freely usable open source software. In the long term, we strive for community-driven implementation during development. In doing so, we are following the idea that the OpenEnergyFamily can be used as a framework for various research projects and thus expanded. The vision is to work together on the implementation of optimal solutions. The community benefits from the freely usable results &amp; infrastructure, the available expertise and the opportunity to contribute its own ideas and thus actively participate in shaping them. We want to follow the Open Science principles.</p>"},{"location":"family_community/collaborative_development/#phase-1-start-requirements-planning","title":"Phase 1: Start, Requirements &amp; Planning","text":"<p>Summary</p> <p>Which goals should be achieved in the 1st phase:</p> <ul> <li>Requirements are created as informal textual descriptions.</li> <li>Information about purpose, users, use cases, functions, priority, and open questions is specified. It is clearly described what criteria must be met for the requirement to be fulfilled.</li> <li>For each requirement or related requirements, an issue is created on GitHub and filled out according to the guidelines from an issue template.</li> <li>The development project is created as a project on GitHub, and relevant issues are added.</li> <li>The development team is assigned to the relevant issues.</li> </ul> <p>Step 1 - Change Request:</p> <p>Initially, a change request is submitted or created, akin to gathering requirements as a foundation for specifying software development requirements in the final step of this phase.</p> <p>Communication of a change request typically occurs through GitHub using the ticket system (Issues) or the discussion area. For more complex issues, discussion in a developer meeting is also possible. A change request doesn't need to be qualitatively extensive; the focus is on documenting a need, with specification happening later.</p> <p>Predefined requirements from research projects and specific user needs (user requirements) are the primary sources for requirements included in most change requests. Other potential sources include simple ideas from the community, considered as user requirements. The difference is that there's no immediate idea about what and how to implement, rather a vague idea that needs more specification.</p> <p>Errors &amp; Bugfixes</p> <p>Additionally, addressing software development errors is among the possible change requests. Errors are a special case, as it's not necessary to go through all the steps of the first phase since what needs to be developed is already clear. Generally, errors not caught by automated tests are discovered in user testing (Phase 4) or during software use (Phase 5: Operation). It's crucial to determine whether an error requires new development, as the functionality cannot otherwise be used. In such cases, it may be necessary to complete all phases. However, most errors are of minor scope and can be resolved quickly. Hence, the subsequent steps of the first and second phases can be skipped, and implementation (error correction) in Phase 3 can start directly. This is referred to as a \"BugFix.\"</p> <p>Once a change request is submitted, especially if it involves a new feature, implementation cannot start immediately. Changes or requirements may also be interconnected. To maintain an overview of all changes during development, prioritization of change requests is done, and the current development project is planned.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-community-manager</li> </ul> <p>Step 2 - Prioritization &amp; Planning:</p> <p>Prioritizing change requests and requirements, planning the current development project, and integrating it into the overarching development roadmap are tasks in that are included in the step. This is crucial for breaking down the long-term development into smaller work-packages, working towards an overarching goal. The roadmap outlines the long-term development plan roughly, providing developers with an idea of the major development goals. Various projects are currently available on GitHub, and future milestones will be created for them.</p> <p>To prepare for prioritization, all change requests and requirements logged on GitHub as Issues are automated into a backlog. The backlog, a list on GitHub, collects all available requirements (Issues). Subsequently, prioritization is conducted to determine if a change, for example, should be implemented in the Open Energy Platform. If a change request is deemed relevant after prioritization, its placement in the current development workflow is decided. This is necessary when other developments must be completed first or priorities lie in different task areas. If a change request aligns with the ongoing project and can be implemented immediately after prioritization. In this case it is scheduled for an upcoming development project, providing a rough timeframe for development. Occasionally, specific, binding deadlines are set, impacting prioritization \u2013 for instance, if a new function is crucial for a research project's work package and must be presented in a meeting.</p> <p>Requirements can change during development, and new ones may emerge. Therefore, allocating requirements to a specific release is not always fixed. Unimplemented requirements at a release's launch are scheduled for the subsequent release. Planning requirements for a release announces the start of implementation, signaling that the following steps and phases of the development process will be undertaken. The number of iterations for requirement completion is not predefined.</p> <p>Core developers play a significant role in prioritization, given their need to oversee current and upcoming development steps. The development principle \"Release early, release often\" is generally followed to promptly showcase users with ongoing developments.</p> <p>Once it's decided that a change request should be implemented, the next steps can be taken.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-product-owner</li> <li>oep-expert</li> <li>oep-software-developer</li> </ul> <p>Step 3 - Development Team:</p> <p>Establishing a development team is essential to clearly distribute responsibilities and foster transparency within the community. While individual efforts can implement development projects, it is generally advisable to form a team. This facilitates practices such as the 4-eye principle from Extreme Programming, where implementation is carried out collaboratively, ensuring a constructive distribution of responsibilities. Common team divisions include Frontend and Backend developers or Developers and Domain Experts. A development team takes on various responsibilities, including executing the subsequent steps of the development process, addressing content-related development queries, documenting and communicating the current development status. It is also assumed that a developer or team adheres to the guidelines established for participation in the development. For instance, various documents are provided in each GitHub repository, with special attention to the CONTRIBUTING.md document.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-domain-expert-energy-modelling</li> <li>oep-ui-ux-developer</li> <li>oep-software-engineer</li> <li>oep-junior-developer</li> <li>oep-expert</li> </ul> <p>Step 4 - Create and Specify Requirements:</p> <p>This step focuses on specifying the change request from the initial phase. The goal is to develop a coordinated system specification, serving as the basis for the detailed technical implementation. Since the desired changes are broadly known, the next step is to specify what the change request includes in terms of concrete requirements (functional solution).</p> <p>When a new functionality (feature) is requested with the change request, it is recommended to first establish a consistent naming convention for the feature. This is crucial for referencing the new functionality in communication. For example, in the development of a new feature for the Open Energy Platform, the functionality was named the \"Open Annotation Tool.\"</p> <p>Assume a specific but broadly formulated change request for the OpenEnergyPlatform: \"I need a button to initiate an Open Peer Review.\" This generates numerous detailed requirements such as \"Where is the button visible?\" and \"Who can activate the button?\" Additionally, the process of the Open Peer Review is not clear. Therefore, it is necessary to design the process and adapt it for implementation in a web application. These various detailed or extensive requirements are typically identified in an analysis phase, often involving a brainstorming session with as many stakeholders as possible. The result is the specification of the software system, which is then aligned with the change request to validate that the software system can fulfill the needs of users. Since various stakeholders are involved in this process, and the specification is systematically developed, a coordinated system specification is established.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-product-owner</li> <li>oep-domain-expert-energy-modelling</li> <li>oep-ui-ux-developer</li> <li>oep-software-engineer</li> <li>oep-junior-developer</li> <li>oep-expert</li> </ul>"},{"location":"family_community/collaborative_development/#phase-2-specification-design","title":"Phase 2: Specification &amp; Design","text":"<p>(User interface &amp; Software functionality)</p> <p></p> <p>Summary</p> <p>Which goals should be achieved in the 2nd phase:</p> <ul> <li>If a user interface is part of the development, then a prototype exists. The tool used allows exporting the prototype representation, for example, as an image file in \".png\" format. Alternatively, access can be provided through a public link.</li> <li>A informal textual and/or visual description of the technical solution is documented in a corresponding issue. It describes which parts of the application are to be expanded, what data is needed, how the processes of the functionalities operate, whether a change to the database is required, whether a new technology is being used, and whether it needs to be installed (e.g., on a new server).</li> <li>If adjustments to the requirements are necessary, these are documented in the corresponding issues on GitHub.</li> <li>A textually described list of relevant test cases and associated requirements is available. The description is documented in the corresponding issues.</li> </ul> <p>Step 1 - Detailed design:</p> <p>Below we propose two techniques to provide the design specification for bot the Frontend - like a UI - and the backend functionality.</p> <p>Prototyping</p> <p>The prototype is a demonstration model of the application. Prototypes can be created in various forms, such as mockups or interactive clickable interfaces. These are particularly useful for developing and visualizing the design and logic of the user interface. The term \"frontend\" of the software system is also used in this context. It is often advantageous to specify the frontend first before designing the backend in the technical solution. This is because the demonstration model allows detailed coordination of the functionalities offered to users. This provides important information about the software components needed. Generally, these steps can also be developed in parallel.</p> <p>Presenting the demonstration model allows verification that the requirements and use cases or user stories will be considered in the implementation phase. Prototyping thus provides a concrete template for development. To create a prototype, the functional solution must be developed beforehand. This involves not only specifying the requirements but also determining which functions or processes can be used, who can use them, what data or inputs are needed, and what outputs are generated. Additionally, decisions can be made regarding which auxiliary information (e.g., tooltips) and error messages should be visible to users. The specified requirements from the first phase serve as a basis, as the use cases are already elaborated there.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-domain-expert-energy-modelling</li> <li>oep-ui-ux-developer</li> <li>oep-expert</li> </ul> <p>Technical Solution</p> <p>The technical solution for a software system like the OpenEnergyPlatform, or any software application in the Open Energy Family, involves detailed design for developing the backend. This includes creating server-side functions, connecting them to the frontend, and setting up new hardware components.</p> <p>It's recommended that an architect (such as oep-expert or oep-software-engineer) leads the development of the technical solution. This solution should include designs for the context view (system outline, application, and interfaces), static view (code components and interfaces), dynamic view (system behavior at runtime, especially after user actions), and distribution view (infrastructure details like hardware nodes and software components).</p> <p>These views are often represented using Unified Modeling Language (UML) diagrams. For instance, context diagrams model the context view, component diagrams depict the static view, sequence diagrams illustrate the dynamic view, and deployment diagrams describe the distribution view.</p> <p>While modeling is common, it's not mandatory when developing software for the OpenEnergyFamily. Descriptions can be text-based in issues or pull requests, or created as informal sketches.</p> <p>Not all views need exhaustive descriptions. For example, if working on the Open Energy Platform, existing structures can be leveraged. Describe where changes will be implemented in the existing system (static view), and also explain how the dynamic view is designed. Specify the software packages (e.g., JavaScript or Python) and REST API endpoints used/created.</p> <p>It is important that developers ensure that functionalities from the backend are accessible through the frontend. As a result is is mandatory that all decisions that are implemented later are documented as some drafts might be revoked during the process.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-software-engineer</li> <li>oep-junior-developer</li> <li>oep-expert</li> </ul> <p>Step 2 - Test Cases:</p> <p>During the elaboration of the detailed design, it is beneficial to create specific test cases for certain use cases. Previous developments in the Open Energy Family have shown that test cases can be defined when planning the detailed design. In modern development processes, literature indicates that establishing test cases is often linked to traceability to requirements (Testim, 2021). This means that test cases not only verify functions from the code but also check the fulfillment of requirements. This approach can also be applied here, especially since it is already known at this stage how the specific processes should be structured and what data structures (input-output) are available.</p> <p>So far, test cases have mainly focused on testing through unit tests (Hildebrandt, 2022), where Python classes or functions in software tools or the backend of the Open Energy Family are tested. This type of test case is at least required for implementation. Testing the entire system through integration tests (Vocke, The Practical Test Pyramid, 2018) should also be planned here, for example, if a software component depends on another component in the system.</p> <p>Test cases for the frontend should also be planned. However, these should be considered as manual tests and will be conducted by a tester in a later step (Phase 4: Acceptance Testing) on the Test Open Energy Platform.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-software-engineer</li> <li>oep-junior-developer</li> </ul> <p>Step 3 - Design Approval:</p> <p>Before the phase can be concluded, the results from the detailed design are evaluated in an approval process. This assessment considers whether the requirements are implemented in the design, whether the design is appealing and user-friendly, and whether the technical solution is consistent. Additionally, the adequacy of the planned test cases can be discussed. Deficiencies are communicated to the responsible development team, and the detailed design is adjusted accordingly.</p> <p>The design approval process typically takes place in developer meetings, with GitHub being used for minor inquiries. If it is decided in the approval process that all aspects of the detailed design meet the requirements, the next phase of implementation can commence.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-product-owner</li> <li>oep-ui-ux-developer</li> <li>oep-software-engineer</li> <li>oep-expert</li> </ul>"},{"location":"family_community/collaborative_development/#phase-3-implementation","title":"Phase 3: Implementation","text":"<p>Summary</p> <p>What goals should be achieved in Phase 3:</p> <ul> <li> <p>A development branch is created for the implementation. The branch name includes the specification of an issue ID, allowing for a clear association with an issue on GitHub. The development branch is compatible (no merge conflicts) with the base development state of the software.</p> </li> <li> <p>A pull request is created for the development branch on GitHub. The development team is assigned to the pull request, and a reviewer is designated.</p> </li> <li> <p>The test cases and source code for all functionalities are included in the development branch. The implementation of the user interface is also available. Changes are available as small Git commits (code check-ins) in the development branch. Individual commit messages are uniquely associated with a requirement through the issue ID.</p> </li> <li> <p>The test suite available in the relevant repository on GitHub is executed without error.</p> </li> <li> <p>All changes, such as new functionalities, fixed bugs, or modified functionalities, are briefly described in an overview in a changelog document and made traceable by specifying the pull request ID.</p> </li> <li> <p>A review has been conducted in the pull request, and all comments are either addressed in the implementation or documented as issues on GitHub.</p> </li> <li> <p>The pull request and thus the development branch have been merged with the base development state.</p> </li> </ul> <p>Step 1 - Start:</p> <p>This section is the initial step for each development. It involves two simple but crucial steps to create a dedicated branch for development, allowing simultaneous work on different projects and transparently documenting progress on GitHub. Automation through continuous integration (CI) on GitHub ensures that each code change is tested for technical functionality. The process involves creating a development branch using Git, ensuring synchronization with the current code state on GitHub, and then initiating a Draft Pull Request on GitHub to make the development public. After implementation, a review is conducted, and the changes are merged with the main branch (develop-Branch). GitHub provides two types of Pull Requests: a Draft indicates ongoing development, and it can be converted to a final one when ready for review. Comments, commits, and linked issues help document and trace changes. The individuals involved are listed to define responsibilities.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-ui-ux-developer</li> <li>oep-software-engineer</li> <li>oep-junior-developer</li> </ul> <p>Step 2 - Implementation:</p> <p>In the implementation phase, we bring the previously planned Frontend and Backend of the Open Energy Platform to life based on the specifications. This involves turning the source code and user interface into a working system. When adding new code, we make sure to test each functional part, like functions, using automated tests (Unit Tests) as part of continuous integration. This continuous testing ensures the code is correct and that everything keeps working even after changes, saving time compared to manual testing.</p> <p>To encourage a good practice, we follow Test-Driven Development (TDD), where tests are written before implementing actual functions. Tests are considered documentation too. Comments in the code, especially in the Backend and Frontend, are essential for explaining how things work. These comments should cover details about each function or class, entire code modules, and individual variables.</p> <p>If both the Frontend and Backend are part of the project, the order of development can vary. For example, a developer might start with the Frontend, implementing it based on an agreed prototype without connecting it to the Backend. Later, the Backend is implemented and connected to the Frontend. Alternatively, a developer could work on tests and functionalities in the Backend before the complete Frontend is available.</p> <p>For effective collaboration, developers might work on smaller pieces, like individual functions in the Backend. Once these functions are ready, the corresponding part is implemented in the Frontend. This allows for incremental development in multiple iterations.</p> <p>To organize data for new features, we create a structure, like a data model, in advance. This helps us figure out what data we need before actually implementing it. The data model serves as a guide, ensuring that the data is structured systematically.</p> <p>Throughout the implementation, we regularly check in our code on GitHub. Each check-in (commit) includes a message explaining the changes. This practice helps with error detection and contributes to thorough documentation and a detailed development history.</p> <p>After the implementation is considered complete by the responsible developers, the next step will be summarizing the changes and reviewing the results.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-ui-ux-developer</li> <li>oep-software-engineer</li> <li>oep-junior-developer</li> </ul> <p>Step 3 - Review changes:</p> <p>In the first step of the review process, developers should determine whether all intended changes have been implemented. The implemented changes are summarized and documented in a GitHub document. For this purpose, a changelog is maintained, which must include a brief entry for each change to the software. During the review by another person, it can be checked whether the changelog contents implement the requirements from the development project and whether the entry is traceable and connected to the requirements (issues). Additionally, it should be checked that new dependencies on external libraries are documented. For example, JavaScript libraries should not be loaded from an external source on the Internet but should be directly placed in the static files of a Django app. Python packages are documented in a repository document with the specified version.</p> <p>Once the changes are documented, in the second step of the review, developers request a review. To do this, the status of the Draft Pull Requests on GitHub is changed to a Pull Request. Furthermore, a reviewer is requested, or it is communicated that a review is necessary. Communication occurs through GitHub by assigning GitHub users and through comments in the pull request. Additional communication channels can also be utilized.</p> <p>Following this, in the third step of the review, a review of the implementation results is conducted. The review is carried out by an expert or software developer (see the role system). The results are communicated on GitHub through a review function. The focus here is on reviewing the technical aspects of the implementation, while also checking the content. It should be noted that some technical requirements are already checked by the CI, and it should not be assumed that the software does not work. The specific process for conducting a review is not strictly prescribed.</p> <p>In general, the review first ensures that the collaborative development guidelines are followed. This includes working with Git and GitHub, the form of communication, and the documentation of implementation details on GitHub and in the code (e.g., docstrings). Subsequently, it is checked whether the requirements are actually implemented. This involves examining whether the functionalities and processes in the backend are implemented as expected. In the frontend, it is checked whether the implementation is in line with the prototypes and whether visible elements, such as buttons, function as expected.</p> <p>Additionally, the code quality is checked. If shortcomings are identified, they can be addressed directly or at least an issue can be created, documenting the problem area.</p> <p>The following are some specific examples of issues that may be identified during a review. For instance, URLs should not be inserted as static text in the code; instead, Django-compliant functionalities should be used to dynamically determine a URL. If a URL changes, the static URL would otherwise need to be manually adjusted. Similarly, passwords should not be visible. Other aspects that must be considered in the review include changes to the database. For example, in the development of the Open Energy Platform, a change to the persistence layer occurs when, for instance, a data table is created; in this case, a migration (script describing the change to the database) must be generated and available on GitHub. If this is not the case, the changes are opaque to others and cannot be applied to the database. Migrations must always be complete, as every small change generates a new migration. Often, only the latest migration is considered, leading to the migration no longer being backward-compatible. This can result in problems when working at different development stages.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-ui-ux-developer</li> <li>oep-software-engineer</li> <li>oep-junior-developer</li> <li>oep-expert</li> </ul>"},{"location":"family_community/collaborative_development/#phase-4-acceptance-test-release","title":"Phase 4: Acceptance test &amp; release","text":"<p>Summary</p> <p>What goals should be achieved in Phase 4:</p> <ul> <li>The result of the implementation is installed in a pre-release in a test environment (e.g., TOEP) under real conditions. The development is evaluated through user acceptance testing. Product Owners test from the project team, and external users test in user testing. Errors, unimplemented requirements, or general comments are documented on GitHub as issues or in a discussion.</li> <li>Errors are addressed by the development team.</li> <li>The software's release procedure, documented in the respective GitHub repository, is completed.</li> </ul> <p>Step 1: Acceptance Testing:</p> <p>In this section, the new development state is delivered in the first step after merging the development branch with the base development state. This is referred to as a pre-release, and for the first time, the results are installed under real conditions, for example, on the web server of the Test Open Energy Platform (TOEP). It should be noted that this step explicitly refers to the Open Energy Platform. The software tools of the Open Energy Family are tested by installing them on a computer.</p> <p>To perform the installation, an infrastructure manager must be involved. Only developers with the necessary access permissions have access to the TOEP infrastructure. For instance, in a developer meeting, it is communicated that a new pre-release is needed. Typically, individuals who either have the necessary permissions or know the relevant people participate in such meetings. The team \"oep-infrastructure-manager\" can be addressed in GitHub communication. In both cases, the installation should be carried out shortly thereafter.</p> <p>Subsequently, the actual user acceptance test can be conducted in two further steps. Once the TOEP website is updated, Product Owners, users, and testers should be encouraged to test the new changes. The duration of these two steps can vary significantly. It is recommended to set an end date after which the subsequent steps will be initiated. From the experience of completed development projects, short timeframes of a day, as well as longer ones of a week, have proven effective.</p> <p>Product Owners are again addressed through a development meeting or the GitHub team \"oep-product-owner.\" Individuals in this group understand the requirements and already have expectations on how the changes should be used. Therefore, they are well-suited to verify whether the results align with the planning expectations. Users can be reached on GitHub through the team \"oep-tester.\" Additionally, if possible, other channels such as personal contacts should be utilized to involve additional potential testers. This group usually has different expectations as detailed information about the changes is not known in advance. They are particularly suitable for testing usability, such as determining whether a new button is easily found or a process is understandable.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-expert</li> <li>oep-infrastructure-manager</li> <li>oep-product-owner</li> <li>oep-tester</li> </ul> <p>Step 2 - Documenting Issues:</p> <p>During user acceptance testing, issues such as software errors, usability problems, or missing requirements may arise. In such cases, it's crucial to document all issues first. The GitHub ticket system (Issues) is used for this purpose. Creating a discussion on GitHub is also recommended to collect feedback. Subsequently, the issues can be summarized, and new ones can be created. Depending on the severity of the issues, adjustments to the implementation may begin either immediately or later. If issues can be fixed right away, the development process returns to the implementation phase. Changes are implemented in a new development branch and then rechecked.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-product-owner</li> <li>oep-tester</li> </ul> <p>Step 3 - Publishing a Release:</p> <p>If all changes are accepted, meaning they have been tested without issues, the release procedure can commence. This involves following a procedure documented in the Open Energy Family repositories in the document \"RELEASE_PROCEDURE.md.\" In summary, the procedure entails creating a release on GitHub, updating the software version number, updating the changelog, and finally, publishing the release.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-product-releaser</li> </ul>"},{"location":"family_community/collaborative_development/#phase-5-delivery-installation-operation","title":"Phase 5: Delivery, Installation &amp; Operation","text":"<p>Summary</p> <p>What goals should be achieved in Phase 5:</p> <ul> <li>The newly released software version is installed on the target system. The software is publicly accessible for users.</li> <li>Additional errors have been addressed through HotFixes, and the version number of the release is adjusted.</li> <li>The operation of the software is ensured and regularly verified. There is a discussion on GitHub where users can provide feedback on new functionalities and errors.</li> </ul> <p>Step 1 - Delivery:</p> <p>In the first section, the previously released software is delivered. Delivery has been possible in two forms. On one hand, software tools are automated for delivery. This is feasible as delivery occurs to a package index, an external platform where software packages can be uploaded. To retrieve the package later, it is downloaded from the package index. For example, software tools developed with Python are uploaded to the Python Package Index (PyPi). PyPi provides open interfaces through which automated delivery can be implemented.</p> <p>A new software version of the Open Energy Platform cannot be delivered automatically for security reasons. The necessary interfaces are not available over the internet. Consequently, delivery in this case is done manually. Once a software release is published, an infrastructure manager copies the release version from GitHub to a directory on the Open Energy Platform's web server. Subsequently, the software can be installed.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-infrastructure-manager</li> </ul> <p>Step 2 - Installation:</p> <p>In this section, a distinction is made between the Open Energy Platform and the software tools of the Open Energy Family. The delivered software version is installed for each.</p> <p>Installing the software tools is generally straightforward due to the use of the package index. A specific command must be executed to install the package along with all dependencies (other necessary software packages). This step is also followed when installing the software dependencies of the Open Energy Platform. Subsequently, it may be necessary to perform a system configuration. Usually, after installation, starting the application is possible.</p> <p>The installation of the Open Energy Platform is more complex and involves multiple steps. First, it is determined whether it is necessary to expand the infrastructure. In this case, a new server may need to be provided, on which a software or part of the software system is then installed. This step can also be complex and is not detailed here.</p> <p>Typically, infrastructure expansion is not required, and the next step, installing dependencies, is carried out directly. This involves installing the dependencies of the Open Energy Platform's software system. Again, the package index described above is used. Subsequently, it is necessary to execute some management commands. These commands are used, among other things, to install new database migrations and collect static files. Various additional commands may be added here, which are not described in detail. Afterward, the software system or the Django application is started and is available on the internet for users.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-infrastructure-manager</li> <li>oep-expert</li> <li>oep-software-engineer</li> </ul> <p>Optional Step - HotFix:</p> <p>If a new error is discovered in the installation section, it can be addressed through an expedited process known as a HotFix. This allows for bypassing all phases of the software development process. Accordingly, the development of a HotFix begins in the implementation phase. A Git branch is created, a test case is established if necessary, and then the required source code is implemented. Subsequently, the branch can be directly merged with the release without the need for extensive user testing or approval from a Product Owner. Following this, the version number of the release on GitHub is adjusted, and the release is delivered and put into operation again.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-expert</li> <li>oep-software-engineer</li> </ul> <p>Step 3 - Operation:</p> <p>Once the application or software system is successfully operational, three key areas are relevant for monitoring operations. The goal is to detect errors early and keep the software application or system operational. As outlined in the introduction to this section, we consider both the short-term operation of software tools on a user's computer and the long-term or ongoing operation of the Open Energy Platform on managed infrastructure. Even as a new software version is put into operation, development can continue in subsequent development iterations.</p> <p>Operation primarily involves the steps of \"Monitoring,\" \"Logging,\" and \"Collecting User Feedback.\" The focus is on continuously gathering various information about the application's state and user experience during runtime.</p> <p>In Monitoring, aspects such as the application's memory usage or the availability of services in a software system are observed. For example, if the Open Energy Platform experiences long response times (several seconds) for requests, this is captured in the monitoring, signaling that response times exceed a threshold. This enables early troubleshooting. Ideally, there is a real-time monitoring system providing necessary information for debugging.</p> <p>Logging is used to document or log information like successfully generated documents or executed accesses to network nodes. In case of an error, the log can help identify where it occurred. It is crucial to ensure that all relevant information is actually recorded in the log. For instance, capturing the timestamp of the log entry is sensible.</p> <p>Collecting user feedback is an ongoing task during operations. Users must have an accessible channel to submit change requests or experience reports. The Open Energy Family uses the GitHub ticket system, developer meetings, emails, or conferences for this purpose.</p> <p>Involved Developer Roles:</p> <ul> <li>oep-infrastructure-manager</li> <li>oep-expert</li> <li>oep-software-engineer</li> <li>oep-product-releaser</li> </ul>"},{"location":"family_community/collaborative_development/#post-iteration-decision","title":"Post-Iteration Decision","text":"<p>After completing a development iteration, a decision must be made on whether the software will continue to be developed or if decommissioning is necessary. Continued development also includes ongoing operation, so it's not strictly about developing new features in the subsequent iteration. It's also about maintaining the operational capability of the software in the long term. When software is decommissioned, operations are halted, or no further developments are released. For example, it is foreseeable that the Open Energy Platform will be developed in the long term. A sustainability concept has been developed, specifying that the technical operation of the Open Energy Platform will be demonstrated at the current location at least until 2035.</p> <p>In the past, some components have been decommissioned or replaced. The software tools of the Open Energy Family are also intended for long-term development, but it may be more likely that individual tools are decommissioned. In such cases, they are likely to be replaced by an alternative software since the use cases will probably persist independently of the specific implementation.</p> <p>Therefore, it can be assumed that ongoing development is always the goal, but meaningful changes (decommissioning, replacement) to the software infrastructure can be made at any time to ultimately improve it.</p>"},{"location":"family_community/collaborative_development/#github-teams","title":"GitHub Teams","text":"<p>We have specific Softwaredeveloper Roles which are implemented as GitHub Teams to coordinate the development. They can only be seen by members of the community.</p> <p>Below, we present a comprehensive overview of all teams dedicated to the developement of software and provide clarification on the identified responsibilities for each role.</p> <p>In addition to clarifying the responsibilities, we leverage teams to enhance communication. This is particularly effective on GitHub, where users can mention teams in issues, discussions, or pull requests to reach a group of individuals and increase the likelihood of receiving prompt responses. To contact a specific team, use \"@\" followed by the team name.</p> <p>To apply for contribution, please get in touch. Take a look at our contact information.</p> Team Responsibilities GitHub Rights oep-domain-expert-energy-modelling - Answers domain-specific questions- Ensures that functionalities solve or support domain-specific problems Read oep-community-manager - Moderates issues and discussions- Enforces the \"Code of Conduct\" and \"Contributing\" guidelines- Maintains the guidelines Triage oep-product-releaser - Enforces release guidelines- Publishes GitHub release- Ensures a release is delivered- Maintains the documentation of changes and the release procedure Maintainer oep-product-owner - Knows the vision and mission of the overall project- Knows the product- Accepts or rejects changes Admin oep-ui-ux-developer - Ensures usability and user experience aspects are implemented- Assists in creating mockups or general design tasks such as graphics, logos, icons, etc. Write oep-software-engineer - Can independently carry out development according to guidelines- Participates in the planning of ongoing development- Mentors junior developers and provides general technical support- Knows the architecture of at least one software product in the Open Energy Family- Conducts code reviews Write oep-junior-developer - Has little or no experience in software development and the Open Energy Family- Wishes to contribute to development in the short or long term- Has basic programming knowledge Write oep-expert - Knows the entire system: all products, especially the software products of the Open Energy Family, including the current architecture and usage, as well as planned developments- Understands dependencies and can assess the impact of changes- Has the final say in development decisions, such as which technology to use, which standards to follow, which pattern to implement Maintainer oep-infrastructure-manager - Implements and operates the CI/CD pipeline and assists in troubleshooting and log analysis- Installs new software versions on a server (after a GitHub release)- Installs new test software version on a server (before a GitHub release)- Manages the installation and operation of all other software tools such as documentation tools Admin oep-tester - Tests the software, for example, once a test release is published- Continuously checks the functionality of the software products- Continuously checks the content, such as texts in training courses or texts on websites, etc. Read"},{"location":"family_community/community_management/","title":"Community Management","text":""},{"location":"family_community/community_management/#community-manager","title":"Community Manager","text":"<p>Community Management is critical for the success of the Open Energy Family.  The Community Manager fosters a collaborative environment and communicates  between the community and the development team. They gather feedback,  prioritize requests, and organize events that facilitate engagement and  collaboration.  Effective Community Management ensures that the framework meets the needs of  its users and adapts to the changing needs of the energy research community.</p>"},{"location":"family_community/community_management/#steering-committees","title":"Steering Committees","text":"<p>To accompany the ongoing development and success of the Community,  two steering committees have been established:  the OEO Steering Committee (OSO-SC)  and the OEFamily Steering Committee (OEFamily-SC). Both steering committees play a critical role in guiding the development  of the Open Energy Family and the OEO.  Their oversight and strategic direction help to ensure that the framework  and ontology remain relevant and useful to the energy research community.</p> <p>You can find the dates on the Contact page.</p>"},{"location":"family_community/community_management/#oefamily-sc","title":"OEFamily-SC","text":"<p>The OEFamily-SC is responsible for the overall development and strategic  direction of the Open Energy Family framework.  The committee works closely with the core development team to ensure that the  framework meets the needs of its users and remains aligned with the goals  of the project. It meets regularly via conference calls and in-person meetings  to exchange information and review planned and completed tasks.</p>"},{"location":"family_community/community_management/#tasks-of-the-oefamily-sc","title":"Tasks of the OEFamily-SC","text":"<ol> <li>Maintain an overview of the OEFamily and its structure<ul> <li>Identify existing and planned functions and components</li> <li>Determine responsibilities and time lines for development</li> <li>Identify similar projects in the field</li> </ul> </li> <li>Support the development of the OEFamily<ul> <li>Support in prioritizing tasks and decisions about the development progress</li> <li>Ensuring the sustainability of the development through continuous feedback and testing</li> </ul> </li> <li>Act as a mediator and decision-making body<ul> <li>Enforce the code of conduct for interpersonal issues</li> <li>Utilize the Dev-Meeting processes for content-related disputes</li> </ul> </li> <li>Support external communication efforts<ul> <li>Represent the OEFamily at conferences and public events</li> <li>Maintain and expand networks, identifying key individuals and organizations who should be informed about the OEFamily and OEP</li> <li>Foster connections between users and developers</li> <li>Communicate with funding bodies and government ministries</li> </ul> </li> <li>Develop and advance the vision of the OEFamily<ul> <li>Developing and pursuing strategies to expand and improve the functionality</li> <li>Identifying future areas of application and integrating new technologies and developments</li> </ul> </li> </ol>"},{"location":"family_community/community_management/#oeo-sc","title":"OEO-SC","text":"<p>The OEO-SC is responsible for overseeing the development of the OEO and ensuring its adoption in currently running and planned projects.  The committee meets regularly via conference calls and in-person meetings  to exchange information and review planned and completed tasks.  The committee also maintains a continuous exchange with ontology developers  through GitHub.</p>"},{"location":"family_community/community_management/#tasks-of-the-oeo-sc","title":"Tasks of the OEO-SC","text":"<ol> <li>Provide advice and support for OEO development</li> <li>Guide basic design decisions</li> <li>Networking to external ontology development teams and with the OEO user community</li> <li>Foster exchange and discussions</li> <li>Arbitration and decision board</li> </ol>"},{"location":"family_community/contact/","title":"Communication","text":""},{"location":"family_community/contact/#contact","title":"Contact","text":""},{"location":"family_community/contact/#github","title":"GitHub","text":"<p>GitHub offers a solid base for our community to communicate and collaborate. We use the GitHub Discussions and GitHub Issues.</p> <p>We have different GitHub Teams to coordinate the development. The link provided above is accessible exclusively to members of our community. To gain an understanding of the teams and their respective responsibilities, we recommend reading our Developer Role overview.</p> <p>If you want to participate in the development, we are happy to add you to the corresponding teams. Please contact us via the mailing list. You can also use the mailing list communicate any suggestions or new features for the OpenEnergyPlatform.</p> <p>Please note to always follow the Code of Conduct on all channels</p>"},{"location":"family_community/contact/#contact-form","title":"Contact Form","text":"<p>The OEP offers a contact form as a direct channel for reaching out to our communication experts. Whether you have questions, feedback, suggestions, or collaboration inquiries, we welcome your message. Our team is committed to ensuring that your voice is heard and that your needs are met promptly and efficiently.</p> <p>On the OEP Contact Form you'll find a user-friendly form where you can provide us with the necessary information. The more details you provide, the better we can understand your requirements and tailor our response accordingly.</p>"},{"location":"family_community/contact/#developer-meetings","title":"Developer Meetings","text":"<p>There are regular developer meetings which are open to everybody.</p>"},{"location":"family_community/contact/#oep-dev","title":"OEP-DEV","text":"<p>Every 2nd week, on Tuesdays, from 14:00 to 14:00 CEST.</p>"},{"location":"family_community/contact/#oeo-dev","title":"OEO-DEV","text":"<p>Every 2nd week, on Thursday, from  10:00 - 12:00 CEST</p>"},{"location":"family_community/contact/#steering-committee-meetings","title":"Steering Committee Meetings","text":""},{"location":"family_community/contact/#oefamily-sc","title":"OEFamily-SC","text":"<p>Takes place on the second Thursday of every 2 months (uneven), from 13:00 to 14:00 CEST. See the Community Management for more information.</p>"},{"location":"family_community/contact/#oeo-sc","title":"OEO-SC","text":"<p>Takes place on the second Thursday of every 2 months (even), from 13:00 to 14:00 CEST. See the Community Management for more information.</p>"},{"location":"family_community/contact/#mailing-lists","title":"Mailing Lists","text":"<p>Our mailing lists are designed to keep you informed, inspired, and engaged with everything happening in the OEFamily. There are several lists for specific topics:</p> Name Address Description Sign Up OEP-Info oep-info@lists.rl-institut.de Info about the Open Energy Platform oep-info-join@lists.rl-institut.de OEP-Contact oep-contact@lists.rl-institut.de Communication Team of the OEP OEP-DEV oep-dev@lists.rl-institut.de Developers of the Open Energy Platform oeo-dev-join@lists.rl-institut.de OEO-DEV oeo-dev@lists.rl-institut.de Developers of the Open Energy Ontology oep-dev-join@lists.rl-institut.de OEO-Contact oeo-contact@lists.rl-institut.de Communication Team of the OEO <p>Info</p> <p>To sign up send an e-mail with subject \"Subscribe\" to the Sign Up address.  </p> <p>Warning</p> <p>The Mailing lists are moderated. Abuse leads to exclusion.</p>"},{"location":"family_community/contact/#element-matrix-channels","title":"Element (Matrix) Channels","text":"<p>We use the Element Messanger for direct communication. Get in touch via the OEP-DEV list or by joining an oep-dev meeting to be invited to the corresponding group.</p>"},{"location":"family_community/contact/#events","title":"Events","text":"<p>There are events and workshops at scientific conferences and research networks. You can meet the developers in real life there.</p>"},{"location":"family_community/knowledge_transfer/","title":"Knowlage transfer","text":"<p>The Open Energy Academy  contains a curated collection of training courses, tutorials,  and specific questions.</p>"},{"location":"family_community/partner/","title":"Partner and Projects","text":"<p>The Open Energy Family is a cross-project research project that is continuously  being developed by various universities and institutes.  The source code of all members of the family is open-source and accessible on GitHub.</p>"},{"location":"family_community/partner/research_partner/","title":"Research Partner","text":""},{"location":"family_community/partner/research_partner/#otto-von-guericke-universitat-magdeburg","title":"Otto von Guericke Universit\u00e4t Magdeburg","text":"<p>https://www.iks.ovgu.de/IKS.html</p>"},{"location":"family_community/partner/research_partner/#reiner-lemoine-institut","title":"Reiner Lemoine Institut","text":"<p>https://reiner-lemoine-institut.de/en/</p>"},{"location":"family_community/partner/research_partner/#oko-institut-ev","title":"\u00d6ko-Institut e.V","text":"<p>https://www.oeko.de/en/</p>"},{"location":"family_community/partner/research_partner/#fraunhofer-iee","title":"Fraunhofer IEE","text":"<p>https://www.iee.fraunhofer.de/en.html</p>"},{"location":"family_community/partner/research_partner/#zentrum-fur-nachhaltige-energiesysteme-europa-universitat-flensburg","title":"Zentrum f\u00fcr nachhaltige Energiesysteme - Europa Universit\u00e4t Flensburg","text":"<p>http://www.znes-flensburg.de/</p>"},{"location":"family_community/partner/research_partner/#europa-universitat-flensburg","title":"Europa Universit\u00e4t Flensburg","text":"<p>https://www.uni-flensburg.de/en/</p>"},{"location":"family_community/partner/research_partner/#helmholz-zentrum-hereon","title":"Helmholz-Zentrum hereon","text":"<p>https://www.hereon.de/</p>"},{"location":"family_community/partner/research_partner/#deutsches-zentrum-fur-luft-und-raumfahrt","title":"Deutsches zentrum f\u00fcr Luft- und Raumfahrt","text":"<p>https://www.dlr.de/de</p>"},{"location":"family_community/partner/research_partner/#forschungszentrum-julich","title":"Forschungszentrum J\u00fclich","text":"<p>https://www.fz-juelich.de/de</p>"},{"location":"family_community/partner/research_partner/#institut-fur-angewandte-informatik","title":"Institut f\u00fcr Angewandte Informatik","text":"<p>https://infai.org/</p>"},{"location":"family_community/partner/research_partner/#potsdam-institute-for-climate-impact-research","title":"POTSDAM INSTITUTE FOR CLIMATE IMPACT RESEARCH","text":"<p>https://www.pik-potsdam.de/en</p>"},{"location":"family_community/partner/research_partner/#universitat-stuttgart-institut-fur-energiewirtschaft-und-rationelle-energieanwendung","title":"Universit\u00e4t Stuttgart - Institut f\u00fcr Energiewirtschaft und Rationelle Energieanwendung","text":"<p>https://www.ier.uni-stuttgart.de/</p>"},{"location":"family_community/partner/research_partner/#fortiss","title":"fortiss","text":"<p>https://www.fortiss.org/</p>"},{"location":"family_community/partner/research_project/","title":"Research Projects","text":"<p>The research projects that are/were involved in the development of the Open Energy Family are presented here.</p>"},{"location":"family_community/partner/research_project/#open_ego","title":"open_eGo","text":""},{"location":"family_community/partner/research_project/#general","title":"General","text":"<p>The aim of the open_eGo project is to develop and use models to generate cost-optimised solutions for the expansion and conversion of the electricity grid for the energy transition. The open-source tool landscape created around the eGo grid planning tool can model all voltage levels in Germany, simulate the basic functioning of the electricity market taking into account the physical AC load flow behaviour and simultaneously optimise grid and storage expansion in an integrated way.</p>"},{"location":"family_community/partner/research_project/#tasks","title":"Tasks","text":"<p>The Open Energy Platform was created within the research project, with the aim of enabling the systematised, cross-model use of open energy data. In addition all input data and results have been published on the OEP and the first version of the OEMetadata has been created.</p>"},{"location":"family_community/partner/research_project/#partners","title":"Partners","text":"<ul> <li>RLI</li> <li>Next Energy</li> <li>ZNES</li> <li>OVGU</li> </ul> <p>Funding</p> <p>Grant number: 0325881</p>"},{"location":"family_community/partner/research_project/#open_fred","title":"open_FRED","text":"<p>open feed-in time series based on a Renewable Energy Database</p>"},{"location":"family_community/partner/research_project/#general_1","title":"General","text":"<p>In open_FRED, the requirements, assumptions and possibilities of energy system analysis and climate models are examined in order to create high-quality, transparent and citable data sets. These are then linked to open source simulation models that generate feed-in time series of fluctuating renewable energies.</p>"},{"location":"family_community/partner/research_project/#tasks_1","title":"Tasks","text":"<p>The aim of open_FRED is to create a data basis for energy system analyses with a uniform standard. For this purpose, the project made availlable relevant data sets for power plant, geospatial and basic data. The result is a special weather data set with high spatial and temporal resolution that meets the requirements of the feed-in models pvlib, windpowerlib and hydropowerlib.</p>"},{"location":"family_community/partner/research_project/#partners_1","title":"Partners","text":"<ul> <li>Reiner Lemoine Institut</li> <li>Helmholz-Zentrum Geesthacht: Zentrum f\u00fcr Material- und K\u00fcstenforschung</li> <li>Otto von Guericke Universit\u00e4t Magdeburg</li> </ul> <p>Funding</p> <p>Grant number: 0324006</p>"},{"location":"family_community/partner/research_project/#szenariendb","title":"SzenarienDB","text":""},{"location":"family_community/partner/research_project/#general_2","title":"General","text":"<p>The aim of SzenarienDB is to create a publicly accessible database on which scenario data, i.e. all data related to a scenario calculation, are summarised and published. This includes both input and output data of the calculation. In addition, the data is linked to the model descriptions.</p>"},{"location":"family_community/partner/research_project/#tasks_2","title":"Tasks","text":"<p>The Open Energy Platform (OEP) has been reworked and redesigned. As a major output, the Open Energy Ontology (OEO) has been created and developed collaboratively. This is significantly improving transparency and the exchange of scenario data.</p>"},{"location":"family_community/partner/research_project/#partners_2","title":"Partners","text":"<ul> <li>Reiner Lemoine Institut</li> <li>Frauenhofer IEE</li> <li>\u00d6ko-Institut e.V.</li> <li>Otto von Guericke Universit\u00e4t Magdeburg</li> </ul> <p>Funding</p> <p>Grant number: 03ET4057</p>"},{"location":"family_community/partner/research_project/#sirop","title":"SIROP","text":"<p>Automated comparison of energy scenarios</p>"},{"location":"family_community/partner/research_project/#general_3","title":"General","text":"<p>The SIROP project aims to enable and (partially) automate scenario interoperability and scenario comparisons. This is an important step towards more comprehensible and reproducible energy system research. SIROP builds on the predecessor project SzenarienDB.</p>"},{"location":"family_community/partner/research_project/#tasks_3","title":"Tasks","text":"<p>In order to use the OEO, the Open Energy Knowledge Graph (OEKG) is beeing developed. As part of the Open Energy Family it is enabling transparency, traceability and reusability of results in energy system research. It is the basis for new Factsheets and a scenario comparision tool. In addition, the OEP is extended by workshop concepts and tutorials to make everything understandable and accessible.</p>"},{"location":"family_community/partner/research_project/#partners_3","title":"Partners","text":"<ul> <li>Reiner Lemoine Institut</li> <li>Frauenhofer IEE</li> <li>\u00d6ko-Institut e.V.</li> <li>Otto von Guericke Universit\u00e4t Magdeburg</li> </ul> <p>Funding</p> <p>Grant number: 03EI1035</p>"},{"location":"family_community/partner/research_project/#open_modex","title":"open_MODEX","text":"<p>Model experiment to compare and determine synergy potentials of open-source frameworks in energy system analysis</p>"},{"location":"family_community/partner/research_project/#general_4","title":"General","text":"<p>In the open_MODEX project, five open source frameworks for energy system analysis are being examined and compared with each other. The aim is to highlight the strengths and weaknesses of the individual frameworks and to analyse commonalities, differences and possible synergies between the them.</p>"},{"location":"family_community/partner/research_project/#tasks_4","title":"Tasks","text":"<p>The aim is to develop open modelling frameworks and use the OEP to give access to the scenario data. Most of the input data and alls results from open_MODEX are available on the OEP under open licences. The main result is the development of the Open Energy Datamodel (OEDatamodel) and an API for automated data access in the models.</p>"},{"location":"family_community/partner/research_project/#partners_4","title":"Partners","text":"<ul> <li>Reiner Lemoine Institut</li> <li>Forschungsnetzwerk Energie</li> <li>RWTH Aachen</li> <li>Technical University of Denmark</li> <li>TU Berlin</li> <li>Europa-Universit\u00e4t Flensburg</li> <li>TU M\u00fcnchen</li> </ul> <p>Funding</p> <p>Grant number: 03ET4076</p>"},{"location":"family_community/partner/research_project/#lod-geoss","title":"LOD-GEOSS","text":"<p>Linked Open Data and use of the Global Earth Observation System GEOSS in energy system analysis</p>"},{"location":"family_community/partner/research_project/#general_5","title":"General","text":"<p>In the LOD-GEOSS project, a networked database concept is to be developed on the basis of Linked Open Data (LOD) and the Semantic Web for input and result data of modelling in energy system analysis. In addition, a connection to the global earth observation system (GEOSS) will be realised, especially for spatio-temporally resolved input data.</p>"},{"location":"family_community/partner/research_project/#tasks_5","title":"Tasks","text":"<p>The Energy Databus is created as a data publication and search index. All data of the OEP will be registered.</p>"},{"location":"family_community/partner/research_project/#partners_5","title":"Partners","text":"<ul> <li>Reiner Lemoine Institut</li> <li>Deutsches Zentrum f\u00fcr Luft- und Raumfahrt</li> <li>Deutsches Zentrum f\u00fcr Luft- und Raumfahrt \u2013 Institut f\u00fcr Vernetzte Energiesysteme</li> <li>J\u00fclich Fosrschungszentrum</li> <li>Potsdam Institute for Climate Impact Research</li> <li>Institut f\u00fcr Angewandte Informatik</li> <li>Universit\u00e4t Stuttgart \u2013 IER</li> </ul> <p>Funding</p> <p>Grant number: 03EI1005</p>"},{"location":"family_community/personas/","title":"Personas and Use-Cases","text":"<p>Personas are fictional representations of the target users of a platform,  helping to understand and empathize with the needs, preferences, and behaviors  of the intended audience. By creating personas, platform developers and  designers gain valuable insights into user demographics, motivations, and goals.  This understanding enables them to design and tailor the platform to meet user  expectations, resulting in a more engaging and user-friendly experience.</p> <p>Each persona represents a specific user archetype or segment,  reflecting the diversity within the user base.  These archetypes are constructed based on a combination of research, user data,  and stakeholder input. Personas typically include details such as age,  occupation, location, interests, and key attributes related to the  platform's purpose.</p>"},{"location":"family_community/personas/personas/","title":"Personas","text":""},{"location":"family_community/personas/personas/#alix-agencyqualitistconsumer","title":"Alix Agency(Qualitist/Consumer)","text":""},{"location":"family_community/personas/personas/#personality","title":"personality","text":"<ul> <li>in late 40s</li> <li>no children (never wanted any)</li> <li>new to the government agency and under pressure to perform. The current work is very different to the prior one (worked at an NGO prior to joining the government agency)</li> <li>challenging to get used to the hierarchical nature of her new employer</li> <li>recently moved to the city where the agency is located and does not yet know many people</li> <li>likes to spend time alone</li> <li>gets frustrated by unnecessary or unexplained technical terms or systems  (what is a git?) and clutter</li> <li>likes clear language and navigation</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation","title":"background / motivation","text":"<ul> <li>government agency employee</li> <li>needs to coordinate many projects that are delivered to the agency by different contractors</li> <li>works often under a lot of time pressure</li> <li>has to make informed decisions in little time</li> </ul>"},{"location":"family_community/personas/personas/#skills","title":"skills","text":"<ul> <li>Works mostly with Office products (PowerPoint) on Windows PC</li> <li>English: good</li> </ul>"},{"location":"family_community/personas/personas/#user-stories","title":"user stories","text":"<ul> <li>I as Alix Agency want to commission a study on Germany and quickly need to find information on institutions that created climate- and energy scenarios for Germany, find the corresponding studies and learn about the scenarios contained in these studies (SIROP).  For that I need a powerful search engine, that finds institutions and their contributions to the OEP in a second.</li> <li>I as Alix Agency want to compare two models using the model and framework factsheets to decide on who to grant a contract. Therefore I need a quick overview of the factsheets that allows me to scan for relevant information (OEP).</li> <li>I as Alix Agency need to define how the data and metadata will need to be published in a research project, so that the requirements of my agency are fulfilled. For that I need a quick and easy overview how to contribute these data to the platform in a proper way to share with my contractors.</li> <li>I as Alix Agency need to confirm that a contractor provided the information to the OEP as stated in the contract, so that final payment can be made. For that I need a powerful search engine, that finds institutions and their contributions to the OEP in a second. </li> </ul>"},{"location":"family_community/personas/personas/#bob-branch-qualitistparticipant","title":"Bob Branch (Qualitist/Participant)","text":""},{"location":"family_community/personas/personas/#personality_1","title":"personality","text":"<ul> <li>early 60s</li> <li>divorced, 2 children, 1 grandchild</li> <li>well established and published in his field</li> <li>cycles everywhere or takes the train</li> <li>lives a sustainable lifestyle since the beginning of his 20s (no car, no flying, vegetarian, lives in a commune)</li> <li>knows a lot about how the scientific field has evolved, wants to share knowledge</li> <li>likes participate in relevant contexts,  but does not have the capacity to learn new skills (e.g. programming) for participating</li> <li>frustrated by lack of scientific standards (source attribution, ...)</li> <li>Interested in open data, but does struggle in applying open licenses</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation_1","title":"background / motivation","text":"<ul> <li>professor for environmental studies</li> </ul>"},{"location":"family_community/personas/personas/#skills_1","title":"skills","text":"<ul> <li>Works mostly with OpenOffice products and statistical tools like SPSS</li> <li>Has no background and basic understanding of licenses</li> <li>No experience with collaborative workflows (git, GitHub ...)</li> <li>English: ok</li> </ul>"},{"location":"family_community/personas/personas/#user-stories_1","title":"user stories","text":"<ul> <li> <p>I as Bob Branch want to add my models and studies as factsheets to the OEP in order to share my knowledge. For this I need an easy-to-use factsheet interface to add the information (OEP) </p> </li> <li> <p>I as Bob Branch want to find information on scenario studies to see what's missing. Based on that I want to work out whether I can create a project proposal. I thus require comparable scenario factsheets that I can view online (one by one, or better next to one another for quick comparison) and that I can download (to read while travelling)</p> </li> </ul>"},{"location":"family_community/personas/personas/#charles-champion-quantitistconsumer","title":"Charles Champion (Quantitist/Consumer)","text":""},{"location":"family_community/personas/personas/#personality_2","title":"personality","text":"<ul> <li>beginning of 30s</li> <li>1 child who lives at his ex-partner</li> <li>wants to save the world quickly and loudly</li> <li>was a math champion in school, but did not pursue a career in maths</li> <li>tends to focus more on pointing out problems rather than also suggesting solutions to them</li> <li>gets frustrated quickly  and has diffculties to concentrate for longer than a couple of minutes</li> <li>immerses in excessive sports (triathlon etc.)</li> <li>frustrated by overwhelming complexity / too many details</li> <li>has +5000 followers on IG</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation_2","title":"background / motivation","text":"<ul> <li>climate activism NGO</li> </ul>"},{"location":"family_community/personas/personas/#skills_2","title":"skills","text":"<ul> <li>Works mostly collaboratively with cloud products (google docs) on his</li> <li>English: native</li> </ul>"},{"location":"family_community/personas/personas/#user-stories_2","title":"user stories","text":"<ul> <li> <p>I as Charles Champion want to quickly find scenario projection data and corresponding scenario descriptions to make a scenario projection comparison because I want to confirm my negative view on the world. For this I require a way (search?) on how to locate the appropriate data on the OEP. (SIROP)</p> </li> <li> <p>I as Charles Champion want to share a \"nice\" graphic on Twitter, Facebook and Instagram. This helps me share my view on the world with the world. For that I require the functionality to generate visualisations from selected data (possibly spread across more than one table).  (SIROP)</p> </li> </ul>"},{"location":"family_community/personas/personas/#diana-dissertation-quantitistparticipant","title":"Diana Dissertation (Quantitist/Participant)","text":""},{"location":"family_community/personas/personas/#personality_3","title":"personality","text":"<ul> <li>mid 30s</li> <li>1 toddler child, no partner, no family close by</li> <li>summa cum laude dissertation (cumulative)</li> <li>challenged with juggling child and work</li> <li>insecure about her own skills</li> <li>frustrated by unnecessary lengthy discussions and feels lost in them after a while</li> <li>is interested in contributing to climate change mitigation one step at a time</li> <li>tries to establish a scientific career, wants to systematically research economic and distributional effects of climate and energy policies and measures</li> <li>wants to publish in scientific journals but is frustrated by the time-lag from results to publication</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation_3","title":"background / motivation","text":"<ul> <li>Post doc in economics</li> </ul>"},{"location":"family_community/personas/personas/#skills_3","title":"skills","text":"<ul> <li>Works mostly with her macbook air and office products on Mac, has some experience with python and databases</li> <li>English: ok</li> </ul>"},{"location":"family_community/personas/personas/#user-stories_3","title":"user stories","text":"<ul> <li>I as Diana Dissertation want to compare economic assumptions (GDP, energy prices) that scenario projections based on the same scenario (e.g. WEM scenario) used as inputs. This helps to  inform my own modelling. For that I need a way to find, filter and download (or compare online) the corresponding data that may reside in more than one table.  (SIROP) </li> </ul> <p>*I as Diana Dissertation want to add (economic and distributional) modelling results to the OEP and contribute economic aspects to the community. For that I require a step-by-step documentation in one place.  (OEP)</p> <ul> <li> <p>I as Diana Dissertation want to contribute economic expertise to the OEO development. For that I need to quickly find on the OEP how I can join the OEO developer community.  (OEP) </p> </li> <li> <p>I as Diana Dissertation require data and metadata of high quality and provide my data respectively. </p> </li> </ul>"},{"location":"family_community/personas/personas/#mona-modeling-quantitistparticipant","title":"Mona Modeling (Quantitist/Participant)","text":""},{"location":"family_community/personas/personas/#personality_4","title":"personality","text":"<ul> <li>Mid 30s</li> <li>1 child, lives with husband in recently bought house</li> <li>summa cum laude dissertation (cumulative)</li> <li>mathematical mind, very organized worker</li> <li>manages work life balance together with her partner</li> <li>frustrated by unnecessary lengthy discussions and likes to come to the point</li> <li>wants to make a career at her institution, can imagine to have her own Team</li> <li>contributes to publicly funded scenario studies and wonders, how obligations to publish her results as open data affect her work</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation_4","title":"background / motivation","text":"<ul> <li>Works as junior scientist in energy systems modeling for a research institution</li> <li>Wants to foster energy system change to ensure the world stays a place to live in for her child</li> <li>Sees this also as a good career opportunity </li> </ul>"},{"location":"family_community/personas/personas/#skills_4","title":"skills","text":"<ul> <li>Programming skills</li> <li>Uses APIs to gather data for her models </li> <li>English fluently</li> </ul>"},{"location":"family_community/personas/personas/#user-stories_4","title":"user stories","text":"<ul> <li> <p>I as Mona Modeling want to quickly find and compare information on the latest models used in energy systems modeling, that I can use to see what's in the market and how I can improve my own models.</p> </li> <li> <p>I as Mona Modeling want to upload information on my models and modelling results to the OEP in no time, so that I can fulfil the obligations from my funding agency regarding open science quickly. Therefore I need an intuitive and easy to use form or API.</p> </li> <li> <p>I as Mona Modeling want to quickly find information on scenarios and connected data sets, that use a specific model or a set of models I'm interested in for its projections, so that I can better understand, how that model or set of models works. In addition want to be informed, when new information on a specific model I'im interested in, is published on the OEP, so that I am always aware of what is going on in the community.</p> </li> <li> <p>I as Mona Modeling want to show what I am working on and get in touch with contributors to the OEP, that deal with models and topics I'm interested in, so that I can expand my professional network within my specific community. Therefore I'd like to create a profile on the OEP, that makes communication easy. </p> </li> </ul>"},{"location":"family_community/personas/personas/#elisa-energy-apinist-consumer","title":"Elisa Energy (Apinist / Consumer)","text":""},{"location":"family_community/personas/personas/#personality_5","title":"personality","text":"<ul> <li>20s, no children, very social and outgoing</li> <li>a little scatter brained, does not remember where she documented things</li> <li>frustrated by lack of clear explanations or documentation on how to work with platforms</li> <li>requires documentation in one place, as otherwise she gets confused as to where the documentation is (see also bullet above)</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation_5","title":"background / motivation","text":"<ul> <li>university student in Renewable Energy Systems</li> <li>needs to fulfill assignment for her classes (energy model)</li> </ul>"},{"location":"family_community/personas/personas/#skills_5","title":"skills","text":"<ul> <li>experienced in R and some python, basic database literacy</li> <li>English: ok</li> </ul>"},{"location":"family_community/personas/personas/#user-stories_5","title":"user stories","text":"<ul> <li> <p>I as Elisa Energy want to use data from the OEP, e.g. MaStR data, as input for my regional energy system model as required by my curriculum. I thus need to identify whether there is proper data for me on the OEP. For this I require a suitable search functionality. </p> </li> <li> <p>I as Elisa Energy want to connect my model directly to the data on the OEP as I do not want to  download the data prior to running the model. This helps me stay focussed and not scatter the data on my computer. For doing this I need to find easily a good documentation of the API. </p> </li> <li> <p>As Elisa Energy I am a newby to the OEP, but need to contribute to it as tasked by my research institute. I need to see easy ways to contribute to the Project or find a quick oversight that leads me to that point where I can contribute.</p> </li> <li> <p>I have to create metadata for reseach data of my institute.</p> </li> </ul>"},{"location":"family_community/personas/personas/#fred-farbenblind-apinist-participant","title":"Fred Farbenblind (Apinist / Participant)","text":""},{"location":"family_community/personas/personas/#personality_6","title":"personality","text":"<ul> <li>30s, no children, slightly misanthropic</li> <li>color blind</li> <li>thinks that his way is oviously the best way</li> <li>likes well designed, standardized systems</li> <li>is an open source enthousiast, only writes code with GPL</li> <li>created two GitHub projects with open software and contributes to other great repos</li> <li>gets disoriented and angry when rules are broken</li> <li>frustrated by things not working as expected / promised</li> <li>likely to give up quickly if things don't work the way they should</li> </ul>"},{"location":"family_community/personas/personas/#background-motivation_6","title":"background / motivation","text":"<ul> <li>data scientist / IT professional</li> </ul>"},{"location":"family_community/personas/personas/#skills_6","title":"skills","text":"<ul> <li>know their way around REST APIs, python, ...</li> <li>English: good</li> </ul>"},{"location":"family_community/personas/personas/#user-stories_6","title":"user stories","text":"<ul> <li>I as Fred Focus want to automate my data pipeline with the OEP API or oedialect. I thus need documentation of the OEP API.</li> <li>I as Fred Focus want to connect my web frontends to the OEP API. I thus need documentation of the OEP API.</li> <li>I as Fred Focus can help bugfix the OEP. I need to find out about how to contribute to OEP development. </li> <li>I as Fred Focus want to get all the metadata I can to work with. For that I need metadata of high quality and a proof for that.</li> </ul>"},{"location":"family_community/personas/personas/#attribution","title":"Attribution","text":"<p>Images by studio4rt on Freepik</p>"},{"location":"family_community/personas/use-cases/","title":"Use-Cases","text":"<p>Note</p> <p>Use Cases have to be verbalized. Currently you can have a look at our oeplatform website use cases.</p>"},{"location":"family_members/","title":"The Open Energy Family Members","text":"<p>The Open Energy Family is an open science framework that aims to support the transition to a more sustainable and renewable energy system. The family focuses on creating and promoting open-source technologies, publicly accessible data, and transparent methods for energy system modeling. It is designed to facilitate collaborative research on solutions for research data management and modeling in the field of energy systems.</p> <p>The project has already achieved considerable research success and is continuously being developed in state-funded research projects. The framework prioritizes openness, transparency, and accessibility to support the collaborative development of the framework.</p> <p> </p> Image caption <p>Web Platform, Service, and Data Storage This area encompasses the Open Energy Platform as a web platform or website, which offers various services and integrates the Open Energy Database and Open Energy Ontology.</p> <p>Organization and Collaboration Organizational tasks for collaborative development work, community management, and conducting research projects are part of the work for the Open Energy Family. This work also includes organizing meetings to exchange content and development work.</p> <p>Ontology Developing the Open Energy Ontology and the Open Energy Knowledge Graph and creating solutions for displaying the knowledge graph in the Open Energy Platform are current tasks in this area. There is a particular focus on using the ontology to enable comparisons between scenarios of energy system modeling.</p> <p>Specification and Templates Maintaining the specification for extensive metadata, the Open Energy Metadata, for comprehensive documentation of energy system modeling data, and enabling linked data fall into this area. Additionally, standardized templates are available and continuously adapted. These templates include the Open Energy Data Model, which can be used for a harmonized data structure of tabular data from energy system modeling. Furthermore, factsheets are created, which allow for a standardized collection of parameters that describe frameworks, models, and scenarios of energy system modeling. Both templates are used to harmonize data, processes, and methods of energy system modeling and enable comparisons. The factsheets are directly integrated into the Open Energy Platform.</p> <p>Data Processing and Process Automation Creating routines for data processing is often an important step, e.g., to upload data to the Open Energy Database. The concrete implementation of these processes often involves very different requirements. An automated process provides a benefit for many users, and this area is accordingly part of the Open Energy Family to support the development and integration of such processes and to make the results reusable.</p> <p>Software Tools The Open Energy Family develops various software tools that are specifically designed for handling Open Energy Metadata or accessing the Open Energy Platform and Open Energy Database. The software tools require installation and are used as a local application. In general, these and future tools are intended to support all tasks of the Open Energy Family. An application case is, for example, the integration of the functionalities and services of the Open Energy Platform into the software of an energy system model to support data management.</p> <p>Knowledge Transfer The diverse possibilities of using the Open Energy Platform or working with the various software tools, specifications, and templates often require background knowledge. The area of knowledge transfer includes developing small tutorials for individual functions and creating courses that provide overarching content. Additionally, frequently asked questions are documented. All information is bundled and presented on the Academy website. This ensures that users have a central point of contact for learning the necessary background knowledge for successful handling of the Open Energy Family.</p>"},{"location":"family_members/#family-members","title":"Family members","text":"<p>As a framework, the Open Energy Family is continuously growing and has become quite substantial in content. The framework has a heterogeneous set of members, some of which are well-known and prominent, while others are smaller and less noticeable. Some members have their own repositories, while others are directly attached to other members. Together, they form a strong circle for working with open data and open science. The Open Energy Platform has a special position here, as it offers the use of most of the technical tools from the framework by providing user-friendly interfaces. In this respect, the platform is particularly visible and bundles all developments.</p> <p></p>"},{"location":"family_members/open-process-integration/","title":"Open Process Integration (OPI)","text":"<p>Create and automate data related processes and workflows to make data generation process transparent and efficient.</p>"},{"location":"family_members/open-process-integration/#open_mastr","title":"open_MaStR","text":"<p>Access open_MaStR</p> <p>https://github.com/OpenEnergyPlatform/open-MaStR</p>"},{"location":"family_members/open-process-integration/#egon-data","title":"eGon-data","text":"<p>Access eGon-data</p> <p>https://github.com/openego/eGon-data</p>"},{"location":"family_members/knowledge-representation/","title":"Knowledge Representation","text":"<p>This section describes the Open Energy Ontology, which is used to record and digitize the knowledge from energy system modelling in detail, and the Open Energy Knowledge Graph, which makes it possible to digitally map certain objects, concepts and relationships. This contributes to a better transparency of the concepts in order to make the energy system models and, in particular, the data more transparent and reusable. These technologies are used in the Open Energy Family in particular for the comparability of scenario data that is used as input and output data in a model.</p>"},{"location":"family_members/knowledge-representation/oekg/","title":"Open Energy Knowledge Graph (OEKG)","text":"<p>The Open Energy Knowledge Graph (OEKG) is a network of entities, their semantic types, properties, and relationships for the energy system analysis domain. It is based on the RDF standard and uses the Turtle format. Fundamentally, the development is according to the Open Energy Ontology (OEO).</p> <p>The structure of the OEKG is based on graph of nodes and relations that are stored in a database. The Open Energy Ontology offers a comprehensive understanding of the energy domain and a structured framework of interconnected concepts. Also, the open energy knowledge graph has been carefully designed to effectively store and present detailed information about specific instances.</p>"},{"location":"family_members/knowledge-representation/oekg/#structure","title":"Structure","text":"<p>The OEKG is used to store knowledge objects. The first major use case for this is scenario bundles on the OEP. The following graphic shows the structure of scenario bundles. A bundle is linked to all relevant knowledge objects. The arrows indicate which description is made and at the end of the arrow is what is mapped. The stacked fields represent the possibility of creating multiple instances. Studies and scenarios can be viewed independently of each other, but both are central elements for the application of the OEKG and can be linked to each other.</p> <p>The tree view shows the connection to the OEO. When a field is created, classes from the OEO are instantiated and are available for selection by the user.</p> <p>Info</p> <p>The following  illustrates a generic model of the scenario bundles which is the main instance available in the OEKG.</p> <p> </p> The connection between Open Energy Ontology (OEO) and the Open Energy Knowledge Graph (OEKG)"},{"location":"family_members/knowledge-representation/oeo/","title":"Open Energy Ontology (OEO)","text":"<p>The Open Energy Ontology (OEO) is created as a domain ontology within the field  of energy system modelling.  It is growing constantly and under a regular release cycle.</p> <p>Access the Open Energy Ontology</p> <p>https://openenergy-platform.org/ontology/</p> <p>https://github.com/OpenEnergyPlatform/ontology</p>"},{"location":"family_members/knowledge-representation/oeo/#domain-ontology-what-is-that","title":"Domain ontology: What is that?","text":"<p>An ontology is a formal collection of terms and relationships between those  terms, with clear definitions and a logical interpretation.  An ontology can help to provide a clear understanding of a domain of discourse. For the Open Energy Platform, this domain of discourse is energy system modelling, and with the Open Energy Ontology (OEO) we aim to develop a language that works across disciplines.</p>"},{"location":"family_members/knowledge-representation/oeo/#what-is-it-good-for","title":"What is it good for?","text":"<p>Ontologies can be used for multiple different purposes, which is why they are already used and developed in many scientific fields. Applications include:</p> <ul> <li>Standardising terminology in a domain: An ontology provides a controlled vocabulary, with clear definitions that indicate how terminology is to be used. A collection of synonyms is created to indicate the breadth of actual language usage in the domain. Thus, it becomes possible to identify, clarify and diambiguate ambiguous vocabulary.</li> <li>Data annotation and integration: Applying an ontology to data annotation in databases allows flexible, content-oriented data integration and aggregation. It adds the possibility of enhanced searching functions and logical querying across datasets.</li> <li>Templates for data capture: The ontology can provide a structure which is used to make reporting more uniform and detailed.</li> <li>Visualisation: Knowledge encoded in the ontology can be visualized in various ways to make it more comprehensible.</li> <li>Text and Data mining: The ontology can be used to automatically search across text and data resources to e.g. suggest associations (mentions) of ontology entities. Automatic assosiations of ontology entities to large corpora can be used to gain an overview of the literature or data across a domain. It can be used for discovery and for automated data or research synthesis and meta-analysis.</li> </ul>"},{"location":"family_members/knowledge-representation/oeo/#usage-beyond-the-open-energy-family-tools","title":"Usage beyond the Open Energy Family tools","text":"<p>The OEO is developed within the scope of the Open Energy Family. Nevertheless, it is developed as an ontology for the whole energy system modelling area. We explicitly want it to be used in other contextes and use cases as well. Where and how can I contribute? Anyone is invited to contribute to OEO development as this is a community-driven process. OEO development takes place on GitHub. We have some helpful guidelines on the workflow and a wiki providing detailed information. Welcome! We invite you to participate. If you have questions, please reach out via the OEP contact form. We can then facilitate someone who can follow up on your question. </p>"},{"location":"family_members/software-architecture/","title":"Software Architecture","text":"<p>The software architecture of Open Energy Family is complex. We maintain several software systems and tools that form the framework, some of which are independent, most of which are interdependent or work closely together.</p> <p>In this section we would like to give a general overview of the components of the architecture without getting bogged down in technical details. The details can be found in the respective repositories or documentation pages of the software systems and tools.</p> <p>The Open Energy Platform plays a special role in the framework architecture as the web platform serves as the main interface for users. The Open Energy Platform provides various services, which are freely accessible over the internet. This allows users to programmatically integrate the interfaces into their applications, for example, to upload data automatically. Also most of the tools of the framework are available to users without the need for them to install them themselves. The software tools can also be installed locally, providing users with different ways to access the Open Energy Platform and the Open Energy Family. At the same time, there are some members of the framework who also offer their user interface as a website like the Databus. The Databus offers improved data findability by registering metadata that was previously created on the Open Energy Platform. This shows that the complex processes are carried out via different systems.</p> <p>From a development perspective, this distribution of responsibilities is necessary to avoid adding too much complexity to individual systems. For users, this results in challenges that make it difficult to understand the system as a whole. An important task of the architecture is therefore to maintain this overview and to create user-friendly, standardized processes.</p> <p> </p> The members of the Open Energy Family are largely integrated into the Open Energy Platform. For example, the databus that registers metadata from the OEP but does not work directly in the OEP is not included."},{"location":"family_members/software-architecture/energy-databus/","title":"Energy Databus","text":"<p>The Open Energy Databus is being developed by DBpedia and is a transformative platform for agile data integration, collaboration, and automation via a structured metadata Knowledge Graph. The deployment that is available specifically for the Open Energy Family acts as an additional semantic layer over the various existing databases to extend the underlying rigid metadata schemas and enable search, persistent IDs and provenance tracking of scientific results.</p> <p>Access the Open Energy Databus</p> <p>https://databus.openenergyplatform.org/</p> <p>Full Documentation https://dbpedia.gitbook.io/databus</p>"},{"location":"family_members/software-architecture/open-energy-database/","title":"Open Energy Database","text":"<p>The OpenEnergyDatabase (OEDB) is the primary database of the OpenEnergyPlatform (OEP). Users can upload and download data in the format of tabular data sets there bx using the OEP interfaces. It is also possible to view and search the contents of the data resources via a preview view on the OEP. In general, the OEDB is intended for the storage of data from energy system models, which is limited to the storage of input and output data used for certain scenarios. However, the need for data goes beyond the topic of energy scenarios, which is why it is also possible to store data on other topics. Overall, the OEDB thus aims to establish an open and jointly managed central database that makes all data relevant to the energy transition available and usable for everyone.</p> <p>Access the Open Energy Database</p> <p>https://openenergy-platform.org/dataedit/schemas</p> <p> </p>      Topics are meticulously curated on the OEP-Website, where data is seamlessly sorted through interfaces. The initial upload takes place in the model_draft schema, ensuring precision before being published and seamlessly transitioned to the designated target topic."},{"location":"family_members/software-architecture/open-energy-platform/","title":"Open Energy Platform","text":"<p>The Open Energy Platform is an open-source software that provides a shared research data infrastructure for the energy sector. It offers tools for data management, analysis, and visualization to support the transition to a sustainable energy system. The platform is flexible and modular, allowing it to be integrated with a variety of existing systems and data sources. The Open Energy Platform is intended to be used by researchers, policymakers, and other stakeholders in the energy sector to facilitate data-driven decision-making processes and promote transparency and collaboration. The data available in the platform can be used to support the planning and operation of energy systems, as well as promote the development of renewable energy sources and the implementation of energy efficiency measures.</p> <p>Access the Open Energy Platform</p> <p>https://openenergy-platform.org/</p>"},{"location":"family_members/software-architecture/open-energy-platform/#overview-of-the-platform-application-components","title":"Overview of the Platform Application Components","text":"<p>Components of our Website-Project that we are actively developeing on GitHub.  Each component represents a Django App and includes a specific functionality or area of the Open Energy Platform Website.</p> Component Function oeplatform - Configuration of the Django application- Security-critical configuration such as connection data to a database base - Basic structure for homepage and views in other components- Mainly static content for textual description of OEP and research projects- Contact form- Legal information api - Provision of the RESTful API- Data management- Generic and specific data queries using query parameters- User permission querying login - User management- Login system dataedit - Presentation of database contents- Metadata management and annotation of ontology terms- Data management via user interface- Tag system- Data visualization- Data querying via user interface- Open Peer Review for data modelview - Creation and editing of various factsheets using a developed standard format in the form of a form- Factsheet searching- Tag system ontology - Integration of the Open Energy Ontology- Presentation of the contents of OEO- Descriptive contents about OEO and the development process oeo_viewer - Open Energy Ontology visualization- Open Energy Ontology search functionality- Special feature: Integrated React application <p>In addition to Django apps, there are other components that serve specific functionalities within the system:</p> Component Explanation theming Configures the global design using Bootstrap5 and provides design components that are imported into the software components listed above. This is where the user-friendly and aesthetic presentation of the web application is configured. oedb_datamodels Implements database migration schemas used for migrating changes to the database (OEDB). These schemas are utilized by an imported software tool to manage all changes to the Open Energy Database from within the Django application. <p>The oeplatofrm Website-Project is actively developed on GitHub.</p>"},{"location":"family_members/software-architecture/open-energy-platform/#users","title":"Users","text":"<p>The user concept allows us to define specific user groups who will interact with the Open Energy Platform in unique ways. Our goal is to facilitate effective data management, simplifying processes such as sharing, reproducing, versioning, and publishing in the energy system research domain. We have identified three distinct user roles.</p> <p>In certain cases, the tasks that users need to perform may be complex and require a learning process. In such instances, it is essential for developers to contribute to these tasks until the community gains proficiency and expertise.</p> <p> </p> Open Energy Family Community user roles"},{"location":"family_members/software-architecture/open-energy-platform/#use-cases","title":"Use Cases","text":"<p>Consumer The role of consumers is to access websites such as the Open Energy Platform and search for current data sets. It can be assumed that these are often researchers in the field of energy system modeling. Accordingly, functionalities must be offered to them to search, filter, and download data resources. Additionally, a consumer needs a view with detailed information about a data resource. The Open Energy Platform provides visualization tools, a dataset and metadata view, as well as various filtering functionalities that allow for text-based, tag (keyword), and data table-based searches.</p> <p>Contributor Publishing research results in the field of open science is important, but it places some requirements on the researchers. The motivation of a contributor is usually to publish research results and contribute to the transparency and reproducibility of research. To do this, a contributor needs a user-friendly process that allows for the database-compliant creation and uploading of tabular data resources. In addition, the process should integrate the creation of metadata in the Open Energy Metadata Format. Afterwards, a contributor needs to be certain whether the artifacts of data management, such as tabular data and metadata, were created correctly. Open Peer Review is used for this purpose. In a feedback loop, the suggestions of a reviewer are discussed and incorporated. The dataset is then published. Later, a contributor can update their dataset and go through the review process again.</p> <p>Reviewer The Open Peer Review of the Open Energy Family is integrated into the Open Energy Platform. After a contributor uploads a new data resource (research results as tabular data, metadata, and additional documents) for publication, this dataset is released for review. A user with an account on the Open Energy Platform can then start the review process and carry it out through an interactive web application. The review allows for several feedback loops between the contributor and reviewer, in which the metadata is checked in the form of the Open Energy Metadata Metadata Specification. The reviewer checks all data fields of the Open Energy Metadata and either agrees with the information, suggests changes, or rejects the information. In this way, a reviewer makes a significant contribution to data quality, particularly to technical correctness and reproducibility of open datasets. To assess quality, developed badges are awarded that transparently represent the level of quality.</p> <p> </p> Image caption"},{"location":"family_members/software-architecture/software-tools/","title":"Software Tools","text":"<p>The OEFamily provides several small software tools for specific tasks.</p>"},{"location":"family_members/software-architecture/software-tools/#oep-client","title":"OEP-Client","text":"<p>The client is a well-developed command line interface (CLI) that can be used to interact with the OEP and in particular with the OEDB database. It offers functions for uploading and downloading data and metadata from the local file storage and is considered the most important CLI tool for all technical users who want to get started quickly.</p> <p>Access oep-client</p> <p>https://github.com/OpenEnergyPlatform/oep-client</p>"},{"location":"family_members/software-architecture/software-tools/#omi-open-metadata-integration","title":"omi - Open Metadata Integration","text":"<p>The Open Metadata Integration OMI tool is used for programmatic work with the oemetadata specification. It can be used for technical operations such as parsing, compiling, rendering, converting and validating the JSON-based metadata specification. It is integrated into the Open Energy Platform and takes responsibility for parsing all metadata before it is stored in a table.</p> <p>Warning</p> <p>The tool is still in use, but is also considered oversized as it takes on too many responsibilities and requires more maintenance effort than expected. We are currently looking into a new implementation.</p> <p>Access omi</p> <p>https://github.com/OpenEnergyPlatform/omi</p>"},{"location":"family_members/software-architecture/software-tools/#saio-sqlalchemy-inputoutput","title":"saio - SQLAlchemy Input/Output","text":"<p>SQLAchemy input output is a small software module for the Python library SQLAlchemy. It enables the automated generation of database table objects in python code. For this purpose, the table structure on the OEDB is used and automatically translated into an ORM. This simplifies object-oriented interaction with the database. However, this module does not have a special user interface and should be integrated into other software.</p> <p>Access saio</p> <p>https://github.com/OpenEnergyPlatform/saio</p>"},{"location":"family_members/software-architecture/software-tools/#oem2orm-open-energy-metadata-to-object-relational-mapper","title":"oem2orm - Open Energy Metadata to Object Relational Mapper","text":"<p>Open Energy Metadata to ORM is a great tool that can be used to automatically create one or more tables on the OEDB database from the Open Energy Metadata Json files. As indicated, it is assumed that metadata already exists in the oemetadata format and that the resources in particular are filled in there. The resources are a key in the JSON document in which the structure of the table is stored schematically.</p> <p>Access oem2orm</p> <p>https://github.com/OpenEnergyPlatform/oem2orm</p>"},{"location":"family_members/software-architecture/software-tools/#oedialect-open-energy-dialect","title":"oedialect- Open Energy Dialect","text":"<p>The Open Energy Dialect is a tool that provides a so-called database dialect specifically for the OEDB. It uses the Python library SQLAlchemy, which can interpret these dialects to gain access to the OEDB via the REST-API of the Open Energy Platform and, for example, to upload and download data there. The oedialect also does not provide its own user interface and should be integrated into other software. </p> <p>Warning</p> <p>The oedialect is still used, but works with a very old version of SQLAlchemy and needs a revision or update. it is mainly used for the so-called extended api of the OEP, which enables extensive database access, but is rarely used by public users, as it is mainly used for other software tools that require this extensive access.</p> <p>Access the oedialect</p> <p>https://github.com/OpenEnergyPlatform/oedialect</p>"},{"location":"family_members/templates-and-specification/","title":"Templates and Specifications","text":"<p>As a long-term research project, it is often necessary to develop new uniform and standardized data and metadata formats to enable the development of solutions.. As a basis for these solutions, specifications and templates are created in the Open Energy Family that are used during development. As a rule, user input is recorded in a standardized manner. During development, developers can assume that the data is available in a defined format.</p> <p>These currently include the factsheets for recording information on framework conditions and models from energy system modelling, the Open Energy Metadata Format for creating comprehensive metadata for tabular data sets and the Open Energy Datamodel as a framework-specific approach for harmonizing relational data models to enable the comparability of data sets.</p> <p>All of these specifications and templates were developed on the basis of the current state of the art and as part of research projects and are freely available and can be further developed.</p>"},{"location":"family_members/templates-and-specification/factsheets/","title":"Factsheets","text":"<p>The Factsheets on the OEP are a standardized collection and presentation of information about frameworks, software, and scenarios used in climate and energy system modelling. The use of interactive fields and pre-defined responses is designed to make it easy to insert data and filter for existing entries.</p>"},{"location":"family_members/templates-and-specification/factsheets/#framework-factsheet","title":"Framework Factsheet","text":"<p>The Frameworks Factsheets are designed to show the different software frameworks used for modeling energy system and energy system analysis. These frameworks offer a systematic approach to simulate, analyze, and sometimes optimize energy systems comprising diverse energy sources, conversion technologies, transmission networks, and consumption patterns. The factsheets aim to provide insights into the methodologies and applications of these frameworks.</p> <p>Access the Framework Factsheets</p> <p>openenergyplatform.org/factsheets/frameworks/</p>"},{"location":"family_members/templates-and-specification/factsheets/#model-factsheet","title":"Model Factsheet","text":"<p>The model factsheet characterizes models used in energy system analysis in a structured way regarding important characteristics, such as their scope and license and their developing institutions. You are developing a model? Then you can inform about its characteristics here. The models available as a factsheet can be integrated as an element into a scenario bundle which weaves together important information about scenarios, such as the model used for conducting a scenario projection, data provided on the OEP, and publications.</p> <p>Access the Model Factsheets</p> <p>openenergyplatform.org/factsheets/models/</p>"},{"location":"family_members/templates-and-specification/open-energy-datamodel/","title":"Open Energy Datamodel","text":"<p>A common open energy data model (oedatamodel) and datapackage format for energy and scenario data. This template data model for relational data was originally developed as part of open_MODEX and serves to harmonize the input and output data structure of different energy system models and thus make them comparable. This requires an effort that has to be implemented by the researchers themselves, since in most cases a data structure already exists that either has to be mapped into the oedatamodel format or entails a complete conversion to the format. More user-friendly solutions are currently being researched here.</p> <p>In general, however, the format is not restrictive and is open to further developments or adaptations. The goal of using a standardized and widespread data model should not be lost sight of in order to ensure the comparability of the data.</p> <p>Access the Open Energy Datamodel</p> <p>https://github.com/OpenEnergyPlatform/oedatamodel</p>"},{"location":"family_members/templates-and-specification/open-energy-metadata/","title":"Open Energy Metadata","text":"<p>Access the Open Energy Metadata</p> <p>https://github.com/OpenEnergyPlatform/oemetadata</p>"},{"location":"family_members/templates-and-specification/open-energy-metadata/#what-is-it-and-what-is-it-good-for","title":"What is it and what is it good for?","text":"<p>Open Energy Metadata (OEMetadata) is a metadata standard designed specifically to be used on data for energy (systems) research. For Science, a metadata standard can provide unambiguity, transparency, objectivity, reliability, verifiability, openness, integrity and novelty. In short - it can help with good scientific practice. OEMetadata adhere to the FAIR principles, i.e. they ensure Findability, Accessibility, Interoperability, and Reuse of digital assets.</p>"},{"location":"family_members/templates-and-specification/open-energy-metadata/#structural-design","title":"Structural Design","text":"<p>Data and metadata come in different levels of structuredness.</p> <p> </p> Levels of structuredness <p>OEMetadata are semi-strucutred and designed to accompany the data themselves. They can describe every structural element of tabular data</p> <p> </p> Tabular Data <p>When designing OEMetadata the following existing standards and agreements were considered:</p> <ul> <li>Dublin Core -&gt; Documenting digital documents</li> <li>Frictionless Data Package -&gt; A container format for in a single 'package'.</li> <li>ISO_19115 -&gt; Geodata</li> <li>INSPIRE -&gt; Regulation on administrative and other specialized Geodata</li> <li>DataCite -&gt; Metadata Schema for data citations</li> <li>schema.org -&gt; Schemas for structured data markup on web pages</li> <li>PROV -&gt; W3C specification providing a vocabulary to interchange provenance information</li> <li>DCAT-AP -&gt; Application profile for data portals in Europe based on the Data Catalog Vocabulary</li> </ul> <p>They shaped OEMetadata to varying degrees. Some of them were too general, others too specific. The following requirements lead us to define our own standard:</p> <ul> <li>Compatibility with csv and database tables</li> <li>machine- and human readability</li> <li>Coverage of all aspects of metadata</li> <li>Coverage of all data and tailoring to energy system analysis</li> <li>Compliance with FAIR criteria</li> <li>Extensibility</li> <li>Well defined compatibility with ontology and linked open data</li> <li>Compatibility with DCAT-AP was originally planned, but the standard was found partly incompatible with datapackages</li> <li>Compatible with all: timeseries, geodata, parameter collections, data produced by machines, data collaboratively collected</li> </ul> <p>Our concept to include ontology references is depiced in a poster (pdf) which was created during the development stage. The resulting standard is based on Data Packages. The file format is JSON (and JSON-LD). In it's simplest form a Tabular Data Package is a csv file containing data, accompanied by a JSON file which describes the name and structure of the data. OEMetadata take the standard set of keys and possible values and extend it with ones useful for energy research. It is inspired by Dublin Core, INSPIRE and DataCite. The development process is organized on GitHub and open for everyone to see and participate in. The repository contains the following useful files:</p> <p>metadata_key_description.md - contains a description of each metadata key template.json - contains an empty metadata string example.json - contains a basic metadata example with filled fields schema.json - JSON schema ensures a well defined standard</p>"},{"location":"family_members/templates-and-specification/open-energy-metadata/#creation-and-management","title":"Creation and management","text":"<ul> <li>Creating a table on the OEP can be done through the wizard. The menu has a section that helps you fill out OEMetadata to accompany your data</li> <li>To help with the creation of a standalone metadata file, the OEP has a metadata creator (You will need to be logged in to use it)</li> <li>There is a review process to maintain any given metadata on the OEP. This   process was created to replace the now deprecated process on GitHub. As a owner of a table on the OEP, you can ask for a review which will start a guided review process. At the end of the process a badge will be assigned to the metadata depicting its level of completeness:</li> <li>Iron \u2013 Technically required for data structure</li> <li>Bronze \u2013 Basic description of the data</li> <li>Silver \u2013 Supplement description of the data</li> <li>Gold \u2013 Extended description of the context</li> <li>Platinum \u2013 Ontological annotation</li> </ul>"},{"location":"family_members/templates-and-specification/open-energy-metadata/#metadata-keys-with-a-description-and-example","title":"Metadata keys with a description and example","text":"<p>The standard is under active development and currently available in version 1.6.0. The table with a full key description is shown here for convenience, but may not be as up to date as in the repository.</p>"},{"location":"family_members/templates-and-specification/open-energy-metadata/#general-keys","title":"General Keys","text":"# Key Description Example 1 name A file name or database table name. oep_metadata_table_example_v16 2 title A human readable full title including author. RLI - OEMetadata - Metadata example table 3 id An Uniform Resource Identifier (URI) that unambiguously identifies the resource. This can be a URL on the data set. It can also be a Digital Object Identifier (DOI). https://example.com 4 description A description or abstract of the package. It should be usable as summary information for the entire package that is described by the metadata. Example table used to illustrate the metadata structure and meaning. 5 language An array of languages used within the described data structures (e.g. titles, descriptions). The language key can be repeated if more languages are used. Standard: IETF (BCP47) en-GB, de-DE, fr-FR 6 subject An array of objects with topics of the data in OEO terms. 6.1 name The class label of the OEO terms. energy 6.2 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000150 7 keywords An array of keywords to assist users searching for the package in catalogs. example, template, test 8 publicationDate A date of publishing of the data or metadata. Date format is ISO 8601 (YYYY-MM-DD). 2019-02-06"},{"location":"family_members/templates-and-specification/open-energy-metadata/#context-keys","title":"Context Keys","text":"# Key Description Example 9 context An object that describes the general setting, environment, or project leading to the creation or maintenance of this dataset. In science this is can be the research project. 9.1 homepage A URL of the project. https://openenergy-platform.org/ 9.2 documentation A URL of the project documentation. https://openenergy-platform.org/about/ 9.3 sourceCode A URL of the projects source code. https://github.com/OpenEnergyPlatform 9.4 contact A reference to the creator or maintainer of the data set. It can be an email address or a GitHub handle. contact@example.com 9.5 grantNo An identifying grant number. In case of a publicly funded project, this number is assigned by the funding agency. 01AB2345 9.6 fundingAgency A name of the entity providing the funding. This can be a government agency or a company. Bundesministerium f\u00fcr Wirtschaft und Klimaschutz 9.7 fundingAgencyLogo A URL to the logo or image of the funding agency. https://commons.wikimedia.org/wiki/File:BMWi_Logo_2021.svg#/media/File:BMWi_Logo_2021.svg 9.8 publisherLogo A URL to the logo of the publishing agency of data. https://reiner-lemoine-institut.de//wp-content/uploads/2015/09/rlilogo.png"},{"location":"family_members/templates-and-specification/open-energy-metadata/#spatial-and-temporal-keys","title":"Spatial and Temporal Keys","text":"# Key Description Example 10 spatial An object that describes the spatial context of the data it contains. 10.1 location A location of the data. In case of data where the location can be described as a point. May be specified as coordinates, URI or addresses with street, house number and zip code. 52.433509, 13.535855 10.2 extent A covered area. May be the name of a region, or the geometry of a bounding box. Europe 10.3 resolution Pixel size in case of a regular raster image. Reference to administrative level or other spatial division that is present as the smallest spatially distinguished unit size. 1 ha 11 temporal An object with the time period covered in the data. Temporal information should either contain a \"referenceDate\" or the keys describing a time series; in rare cases both. 11.1 referenceDate The base year, month or day. Point in time for which the data is meant to be accurate. The census data or a satellite image will have a reference date. Date Format is ISO 8601. 2016-01-01 11.2 timeseries An array that describes the timeseries. 11.2.1 start The beginning point in time of a time series. 2019-02-06T10:12:04+00:00 11.2.2 end The end point in time of a time series. 2019-02-07T10:12:04+00:00 11.2.3 resolution The time span between individual points of information in a time series. 30 s 11.2.4 alignment An indicator whether stamps in a time series are left, right or middle. left 11.2.5 aggregationType Indicates whether the values are a sum, average or current. sum"},{"location":"family_members/templates-and-specification/open-energy-metadata/#source-keys","title":"Source Keys","text":"# Key Description Example 12 sources An array of objects with the used and underlying sources of the data and metadata. 12.1 title A human readable title of the source, a document title or organisation name. IPCC Fifth Assessment Report 12.2 description A free text description of the data set. Scientific climate change report by the UN 12.3 path A URL to the original source. https://www.ipcc.ch/site/assets/uploads/2018/02/ipcc_wg3_ar5_full.pdf 12.4 licenses An array of objects under which the source is provided. 12.4.1 name The SPDX identifier. ODbL-1.0 12.4.2 title The official (human readable) title of the license. Open Data Commons Open Database License 1.0 12.4.3 path A link to the license text. https://opendatacommons.org/licenses/odbl/1-0/index.html 12.4.4 instruction A short description of rights and restrictions. The use of tl;drLegal is recommended. You are free to share and change, but you must attribute, and share derivations under the same license. See https://tldrlegal.com/license/odc-open-database-license-(odbl) for further information. 12.4.5 attribution The copyright owner of the source. If attribution licenses are used, that name must be acknowledged. \u00a9 Intergovernmental Panel on Climate Change 2014"},{"location":"family_members/templates-and-specification/open-energy-metadata/#license-keys","title":"License Keys","text":"# Key Description Example 13 licenses An array of objects of the license(s) under which the described package is provided. It can depend on the licenses of the sources (copyleft or share-alike) or can be granted by the creator of the data. 13.1 name The SPDX identifier. ODbL-1.0 13.2 title The official (human readable) title of the license. Open Data Commons Open Database License 1.0 13.3 path A link to the license text. https://opendatacommons.org/licenses/odbl/1-0/index.html 13.4 instruction A short description of rights and restrictions. The use of tl;drLegal is recommended. You are free to share and change, but you must attribute, and share derivations under the same license. See https://tldrlegal.com/license/odc-open-database-license-(odbl) for further information. 13.5 attribution The copyright owner of the data. If attribution licenses are used, that name must be acknowledged. \u00a9 Reiner Lemoine Institut"},{"location":"family_members/templates-and-specification/open-energy-metadata/#provenience-keys","title":"Provenience Keys","text":"# Key Description Example 14 contributors An array of objects of the people or organizations who contributed to the data or metadata. Each object refers to one contributor. Every contributor must have a title and property. The path, email, role and organization properties are optional. 14.1 title A name of the contributor. Ludwig H\u00fclk 14.2 email A email address of the contributor or GitHub handle. @Ludee 14.3 date The date of the contribution. If the contribution took more than a day, use the date of the final contribiution. Date Format is ISO 8601. 2016-06-16 14.4 object The target of the contribution. Which part of the package was supplied or changed. Can be the data, metadata or both (data and metadata). data and metadata 14.5 comment A free text commentary on what has been done. Fixed a typo in the title."},{"location":"family_members/templates-and-specification/open-energy-metadata/#resource-keys","title":"Resource Keys","text":"# Key Description Example 15 resources An array of objects of the data. It describes the data resource as an individual file or (database) table. 15.1 profile The profile of this descriptor according to the profiles specification. This information is retained in order to comply with the \"Tabular Data Package\" standard. Use \"tabular-data-resource\" for all tables. tabular-data-resource 15.2 name A name for the entire data package. The name must consist of only lowercase alphanumeric characters or underscore. It must not start with a number or underscore. In a database, this will be the name of the table within the schema containing it. The name can correspond to the file name (minus the file-extension) of the data file describing the resource, if it complies with the naming convention above. Name also contains information about the shema on the OEP, use \".\" to seperate shema from table name. openstreetmap.osm_deu_line 15.3 path A URL that should be a permanent http(s) address or other path directly linking to the resource. https://openenergy-platform.org/dataedit/view/openstreetmap/osm_deu_line 15.4 format The file extension. 'csv', 'xls', 'json' etc. would be expected to be the standard file extension for this type of resource. When you upload your data to the OEDB, in the shown metadata string, the format will be changed accordingly to 'PostgreSQL', since the data there are stored in a database. PostgreSQL 15.5 encoding Specifies the character encoding of the resource's data file. The values should be one of the \"Preferred MIME Names\" for a character encoding registered with IANA. If no value for this key is specified then the default is UTF-8. UTF-8"},{"location":"family_members/templates-and-specification/open-energy-metadata/#resource-keys-schema","title":"Resource Keys - Schema","text":"# Key Description Example 15.6 schema An object that describes the structure of the present data. It contains all fields (columns of the table), the primary key and optional foreign keys. 15.6.1 fields An array of objects describing a column and providing name, description, type and unit. 15.6.1.1 name The name of the field. The name must consist of only lowercase alphanumeric characters or underscore. It must not start with a number or underscore. year 15.6.1.2 description A text describing the field. Reference year for which the data were collected. 15.6.1.3 type The data type of the field. In case of a geom column in a database, also indicate the shape and CRS. geometry(Point, 4326) 15.6.1.4 unit The unit, preferably SI-unit, that values in this field are mapped to. If 'unit' doesn't apply to a field, use 'null'. If the unit is given in a seperate field, reference this field. MW 15.6.1.5 isAbout An array of objects with describe the field in OEO terms. 15.6.1.5.1 name The class label of the OEO terms. wind energy converting unit 15.6.1.5.2 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000044 15.6.1.6 valueReference An array of objects for an extended description of the values in the column in OEO terms. 15.6.1.6.1 value The name of the value in the column. onshore 15.6.1.6.2 name The class label of the OEO terms. onshore wind farm 15.6.1.6.3 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000311"},{"location":"family_members/templates-and-specification/open-energy-metadata/#resource-keys-properties","title":"Resource Keys - Properties","text":"# Key Description Example 15.6.2 primaryKey A primary key is a field or set of fields that uniquely identifies each row in the table. It is recorded as an array, since it is possible to define the primary key as made up of several columns. id 15.6.3 foreignKeys A foreign key is a field that refers to a column in another table. 15.6.3.1 fields The column in the table that is constrainted by the foreign key. version 15.6.3.2 reference The reference to the foreign table. 15.6.3.2.1 resource The foreign resource (table). schema.table 15.6.3.2.2 fields The foreign resource column. version 15.7 dialect Object. A CSV Dialect defines a simple format to describe the various dialects of CSV files in a language agnostic manner. In case of a database, the values in the containing fields are 'null'. 15.7.1 delimiter The delimiter specifies the character sequence which should separate fields (columns). Common characters are \",\" (comma), \".\" (point) and \"\\t\" (tab). , 15.7.2 decimalSeparator A symbol used to separate the integer part from the fractional part of a number written in decimal form. Depending on language and region this symbol can be \".\" or \",\". ."},{"location":"family_members/templates-and-specification/open-energy-metadata/#review-keys","title":"Review Keys","text":"# Key Description Example 16 @id A Uniform Resource Identifier (URI) that links the resource via the DBedia Databus. https://databus.dbpedia.org/kurzum/mastr/bnetza-mastr/01.04.00 17 @context Explanation of metadata keys in ontology terms. https://github.com/OpenEnergyPlatform/oemetadata/blob/master/metadata/latest/context.json 18. review Data uploaded through the OEP will go through a review process. The review will cover the data and metadata. It is done by the OEP community. See the OEP Data Review for detailed information. The review itself is documented at the specified path and a badge is rewarded with regards to completeness. 18.1 path A URL that should be a permanent http(s) address directly linking to the documented review. https://www.example.com 18.2 badge A badge of either Bronze, Silver, Gold or Platinum is used to label the given data and metadata based on its quality. Platinum"},{"location":"family_members/templates-and-specification/open-energy-metadata/#metametadata-keys","title":"MetaMetadata Keys","text":"# Key Description Example 19 metaMetadata An object that describes the metadata themselves, their format, version and license. These fields should already be provided when you are filling out your metadata. 19.1 metadataVersion The type and version number of the metadata. OEP-1.5.2 19.2 metadataLicense The license of the provided metadata. 19.2.1 name The SPDX identifier. CC0-1.0 19.2.2 title The official (human readable) title of the license. Creative Commons Zero v1.0 Universal 19.2.3 path A link to the license text. https://creativecommons.org/publicdomain/zero/1.0/"},{"location":"family_members/templates-and-specification/open-energy-metadata/#comments","title":"Comments","text":"# Key Description Example 20 _comment An array of objects. This section is used as a self-description of the final metadata file. It is text, intended for humans and includes a link to the metadata documentation, required value formats and similar remarks. 20.1 metadata Reference to the metadata documentation in use. Metadata documentation and explanation (https://github.com/OpenEnergyPlatform/oemetadata) 20.2 dates Comment on data and time format. Dates and time must follow the ISO8601 including time zone (YYYY-MM-DD or YYYY-MM-DDThh:mm:ss\u00b1hh) 20.3 units Comment on units. Use a space between numbers and units (100 m) 20.4 languages Comment on language format. Languages must follow the IETF (BCP47) format (en-GB, en-US, de-DE) 20.5 licenses Comment on license format. License name must follow the SPDX License List (https://spdx.org/licenses/) 20.6 review Reference to review documentation. Following the OEP Data Review (https://github.com/OpenEnergyPlatform/data-preprocessing/blob/master/data-review/manual/review_manual.md) 20.7 null Comment on fields that don't apply. If not applicable use: null 20.8 todo Comment on fields that are not yet available and will be inserted later on. If a value is not yet available, use: todo"},{"location":"family_members/templates-and-specification/scenario-bundles/","title":"Scenario Bundles","text":"<p>The Scenario Bundles provide a interface to store and present dedicated information about specific scenarios for which projection data is available on the OEP. They are based on the concepts available in the Open Energy Ontology (OEO) and the Open Energy Knowledge Graph (OEKG). This enables the OEP to include information on the scenario projection data available in the database, the corresponding frameworks and models applied (available as factsheets on the OEP),and the study context.</p> <p>In detail we specify scenario bundles as:</p> <p>Scenario bundles weave together important information about one or more scenarios. They inform about studies made based on a scenario, including publications (= study report).</p> <p>If there is quantitative input data and / or output data available on the OEP, the scenario bundles can link to that data, too. They can also inform about models (if available as a model factsheet) and frameworks (if available as a framework factsheet) that were used to project a scenario into the future (= scenario projection).</p> <p>In a nutshell: A scenario bundle provides you with all relevant information to understand a scenario's context and to ease a potential re-use of quantitative data for your purposes.</p> <p>Access the Scenario Bundles</p> <p>openenergyplatform.org/scenario-bundles/main</p>"},{"location":"family_members/templates-and-specification/scenario-bundles/#scenario-bundles-on-the-openenergyplatform","title":"Scenario Bundles on the OpenEnergyPlatform","text":"<p>The main page displays a list of bundles created by various users and organizations. Users can select a bundle to view it in detail or click the scenario badges to start a qualitative comparison.</p> <p> </p> List of bundles <p>Bundles can be accessed in two modes: view mode, which allows users to see the bundles. The edit mode enables users to make changes to the bundles.</p> <p> </p> View a bundle <p> </p> Edit a bundle and add scenarios <p>The comparison show scenarios from different bundles next to each other and displays similarities and differences for comparison.</p> <p> </p> An example of a qualititative comparison between bundles"}]}